# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['ComputeInstanceArgs', 'ComputeInstance']

@pulumi.input_type
class ComputeInstanceArgs:
    def __init__(__self__, *,
                 template_id: pulumi.Input[str],
                 type: pulumi.Input[str],
                 zone: pulumi.Input[str],
                 anti_affinity_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 deploy_target_id: Optional[pulumi.Input[str]] = None,
                 disk_size: Optional[pulumi.Input[int]] = None,
                 elastic_ip_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ipv6: Optional[pulumi.Input[bool]] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 private_network_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ssh_key: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 user_data: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a ComputeInstance resource.
        :param pulumi.Input[str] template_id: The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`get_compute_template`][d-compute_template] data source is recommended.
        :param pulumi.Input[str] type: The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
        :param pulumi.Input[str] zone: The name of the [zone][zone] to deploy the Compute instance into.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] anti_affinity_group_ids: A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
        :param pulumi.Input[str] deploy_target_id: A Deploy Target ID.
        :param pulumi.Input[int] disk_size: The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] elastic_ip_ids: A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
        :param pulumi.Input[bool] ipv6: Enable IPv6 on the Compute instance (default: `false`).
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] labels: A map of key/value labels.
        :param pulumi.Input[str] name: The name of the Compute instance.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_network_ids: A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
        :param pulumi.Input[str] ssh_key: The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
        :param pulumi.Input[str] state: The state of the Compute instance (supported values: `started`, `stopped`).
        :param pulumi.Input[str] user_data: A [cloud-init][cloudinit] configuration.
        """
        pulumi.set(__self__, "template_id", template_id)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "zone", zone)
        if anti_affinity_group_ids is not None:
            pulumi.set(__self__, "anti_affinity_group_ids", anti_affinity_group_ids)
        if deploy_target_id is not None:
            pulumi.set(__self__, "deploy_target_id", deploy_target_id)
        if disk_size is not None:
            pulumi.set(__self__, "disk_size", disk_size)
        if elastic_ip_ids is not None:
            pulumi.set(__self__, "elastic_ip_ids", elastic_ip_ids)
        if ipv6 is not None:
            pulumi.set(__self__, "ipv6", ipv6)
        if labels is not None:
            pulumi.set(__self__, "labels", labels)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if private_network_ids is not None:
            pulumi.set(__self__, "private_network_ids", private_network_ids)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)
        if ssh_key is not None:
            pulumi.set(__self__, "ssh_key", ssh_key)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if user_data is not None:
            pulumi.set(__self__, "user_data", user_data)

    @property
    @pulumi.getter(name="templateId")
    def template_id(self) -> pulumi.Input[str]:
        """
        The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`get_compute_template`][d-compute_template] data source is recommended.
        """
        return pulumi.get(self, "template_id")

    @template_id.setter
    def template_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "template_id", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def zone(self) -> pulumi.Input[str]:
        """
        The name of the [zone][zone] to deploy the Compute instance into.
        """
        return pulumi.get(self, "zone")

    @zone.setter
    def zone(self, value: pulumi.Input[str]):
        pulumi.set(self, "zone", value)

    @property
    @pulumi.getter(name="antiAffinityGroupIds")
    def anti_affinity_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
        """
        return pulumi.get(self, "anti_affinity_group_ids")

    @anti_affinity_group_ids.setter
    def anti_affinity_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "anti_affinity_group_ids", value)

    @property
    @pulumi.getter(name="deployTargetId")
    def deploy_target_id(self) -> Optional[pulumi.Input[str]]:
        """
        A Deploy Target ID.
        """
        return pulumi.get(self, "deploy_target_id")

    @deploy_target_id.setter
    def deploy_target_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "deploy_target_id", value)

    @property
    @pulumi.getter(name="diskSize")
    def disk_size(self) -> Optional[pulumi.Input[int]]:
        """
        The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
        """
        return pulumi.get(self, "disk_size")

    @disk_size.setter
    def disk_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "disk_size", value)

    @property
    @pulumi.getter(name="elasticIpIds")
    def elastic_ip_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
        """
        return pulumi.get(self, "elastic_ip_ids")

    @elastic_ip_ids.setter
    def elastic_ip_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "elastic_ip_ids", value)

    @property
    @pulumi.getter
    def ipv6(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable IPv6 on the Compute instance (default: `false`).
        """
        return pulumi.get(self, "ipv6")

    @ipv6.setter
    def ipv6(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ipv6", value)

    @property
    @pulumi.getter
    def labels(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        A map of key/value labels.
        """
        return pulumi.get(self, "labels")

    @labels.setter
    def labels(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "labels", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the Compute instance.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="privateNetworkIds")
    def private_network_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
        """
        return pulumi.get(self, "private_network_ids")

    @private_network_ids.setter
    def private_network_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "private_network_ids", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "security_group_ids", value)

    @property
    @pulumi.getter(name="sshKey")
    def ssh_key(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
        """
        return pulumi.get(self, "ssh_key")

    @ssh_key.setter
    def ssh_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ssh_key", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[str]]:
        """
        The state of the Compute instance (supported values: `started`, `stopped`).
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter(name="userData")
    def user_data(self) -> Optional[pulumi.Input[str]]:
        """
        A [cloud-init][cloudinit] configuration.
        """
        return pulumi.get(self, "user_data")

    @user_data.setter
    def user_data(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_data", value)


@pulumi.input_type
class _ComputeInstanceState:
    def __init__(__self__, *,
                 anti_affinity_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 created_at: Optional[pulumi.Input[str]] = None,
                 deploy_target_id: Optional[pulumi.Input[str]] = None,
                 disk_size: Optional[pulumi.Input[int]] = None,
                 elastic_ip_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ipv6: Optional[pulumi.Input[bool]] = None,
                 ipv6_address: Optional[pulumi.Input[str]] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 private_network_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 public_ip_address: Optional[pulumi.Input[str]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ssh_key: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 template_id: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 zone: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ComputeInstance resources.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] anti_affinity_group_ids: A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
        :param pulumi.Input[str] created_at: The creation date of the Compute instance.
        :param pulumi.Input[str] deploy_target_id: A Deploy Target ID.
        :param pulumi.Input[int] disk_size: The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] elastic_ip_ids: A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
        :param pulumi.Input[bool] ipv6: Enable IPv6 on the Compute instance (default: `false`).
        :param pulumi.Input[str] ipv6_address: The IPv6 address of the Compute instance main network interface.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] labels: A map of key/value labels.
        :param pulumi.Input[str] name: The name of the Compute instance.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_network_ids: A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
        :param pulumi.Input[str] public_ip_address: The IPv4 address of the Compute instance's main network interface.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
        :param pulumi.Input[str] ssh_key: The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
        :param pulumi.Input[str] state: The state of the Compute instance (supported values: `started`, `stopped`).
        :param pulumi.Input[str] template_id: The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`get_compute_template`][d-compute_template] data source is recommended.
        :param pulumi.Input[str] type: The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
        :param pulumi.Input[str] user_data: A [cloud-init][cloudinit] configuration.
        :param pulumi.Input[str] zone: The name of the [zone][zone] to deploy the Compute instance into.
        """
        if anti_affinity_group_ids is not None:
            pulumi.set(__self__, "anti_affinity_group_ids", anti_affinity_group_ids)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if deploy_target_id is not None:
            pulumi.set(__self__, "deploy_target_id", deploy_target_id)
        if disk_size is not None:
            pulumi.set(__self__, "disk_size", disk_size)
        if elastic_ip_ids is not None:
            pulumi.set(__self__, "elastic_ip_ids", elastic_ip_ids)
        if ipv6 is not None:
            pulumi.set(__self__, "ipv6", ipv6)
        if ipv6_address is not None:
            pulumi.set(__self__, "ipv6_address", ipv6_address)
        if labels is not None:
            pulumi.set(__self__, "labels", labels)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if private_network_ids is not None:
            pulumi.set(__self__, "private_network_ids", private_network_ids)
        if public_ip_address is not None:
            pulumi.set(__self__, "public_ip_address", public_ip_address)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)
        if ssh_key is not None:
            pulumi.set(__self__, "ssh_key", ssh_key)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if template_id is not None:
            pulumi.set(__self__, "template_id", template_id)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if user_data is not None:
            pulumi.set(__self__, "user_data", user_data)
        if zone is not None:
            pulumi.set(__self__, "zone", zone)

    @property
    @pulumi.getter(name="antiAffinityGroupIds")
    def anti_affinity_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
        """
        return pulumi.get(self, "anti_affinity_group_ids")

    @anti_affinity_group_ids.setter
    def anti_affinity_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "anti_affinity_group_ids", value)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[str]]:
        """
        The creation date of the Compute instance.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_at", value)

    @property
    @pulumi.getter(name="deployTargetId")
    def deploy_target_id(self) -> Optional[pulumi.Input[str]]:
        """
        A Deploy Target ID.
        """
        return pulumi.get(self, "deploy_target_id")

    @deploy_target_id.setter
    def deploy_target_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "deploy_target_id", value)

    @property
    @pulumi.getter(name="diskSize")
    def disk_size(self) -> Optional[pulumi.Input[int]]:
        """
        The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
        """
        return pulumi.get(self, "disk_size")

    @disk_size.setter
    def disk_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "disk_size", value)

    @property
    @pulumi.getter(name="elasticIpIds")
    def elastic_ip_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
        """
        return pulumi.get(self, "elastic_ip_ids")

    @elastic_ip_ids.setter
    def elastic_ip_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "elastic_ip_ids", value)

    @property
    @pulumi.getter
    def ipv6(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable IPv6 on the Compute instance (default: `false`).
        """
        return pulumi.get(self, "ipv6")

    @ipv6.setter
    def ipv6(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ipv6", value)

    @property
    @pulumi.getter(name="ipv6Address")
    def ipv6_address(self) -> Optional[pulumi.Input[str]]:
        """
        The IPv6 address of the Compute instance main network interface.
        """
        return pulumi.get(self, "ipv6_address")

    @ipv6_address.setter
    def ipv6_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipv6_address", value)

    @property
    @pulumi.getter
    def labels(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        A map of key/value labels.
        """
        return pulumi.get(self, "labels")

    @labels.setter
    def labels(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "labels", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the Compute instance.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="privateNetworkIds")
    def private_network_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
        """
        return pulumi.get(self, "private_network_ids")

    @private_network_ids.setter
    def private_network_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "private_network_ids", value)

    @property
    @pulumi.getter(name="publicIpAddress")
    def public_ip_address(self) -> Optional[pulumi.Input[str]]:
        """
        The IPv4 address of the Compute instance's main network interface.
        """
        return pulumi.get(self, "public_ip_address")

    @public_ip_address.setter
    def public_ip_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_ip_address", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "security_group_ids", value)

    @property
    @pulumi.getter(name="sshKey")
    def ssh_key(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
        """
        return pulumi.get(self, "ssh_key")

    @ssh_key.setter
    def ssh_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ssh_key", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[str]]:
        """
        The state of the Compute instance (supported values: `started`, `stopped`).
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter(name="templateId")
    def template_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`get_compute_template`][d-compute_template] data source is recommended.
        """
        return pulumi.get(self, "template_id")

    @template_id.setter
    def template_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "template_id", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="userData")
    def user_data(self) -> Optional[pulumi.Input[str]]:
        """
        A [cloud-init][cloudinit] configuration.
        """
        return pulumi.get(self, "user_data")

    @user_data.setter
    def user_data(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_data", value)

    @property
    @pulumi.getter
    def zone(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the [zone][zone] to deploy the Compute instance into.
        """
        return pulumi.get(self, "zone")

    @zone.setter
    def zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone", value)


class ComputeInstance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 anti_affinity_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 deploy_target_id: Optional[pulumi.Input[str]] = None,
                 disk_size: Optional[pulumi.Input[int]] = None,
                 elastic_ip_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ipv6: Optional[pulumi.Input[bool]] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 private_network_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ssh_key: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 template_id: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 zone: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides an Exoscale [Compute instance][compute-doc] resource. This can be used to create, modify, and delete Compute instances.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_exoscale as exoscale

        zone = "ch-gva-2"
        ubuntu = exoscale.get_compute_template(zone=zone,
            name="Linux Ubuntu 20.04 LTS 64-bit")
        web = exoscale.SecurityGroup("web")
        default = exoscale.get_security_group(name="default")
        example = exoscale.ComputeInstance("example",
            zone=zone,
            type="standard.medium",
            template_id=ubuntu.id,
            disk_size=10,
            security_group_ids=[
                default.id,
                web.id,
            ],
            ssh_key="my-key",
            user_data=\"\"\"#cloud-config
        manage_etc_hosts: localhost
        \"\"\")
        ```

        ## Import

        An existing Compute instance can be imported as a resource by `<ID>@<ZONE>`console

        ```sh
         $ pulumi import exoscale:index/computeInstance:ComputeInstance my-instance eb556678-ec59-4be6-8c54-0406ae0f6da6@ch-gva-2
        ```

         [cloudinit]http://cloudinit.readthedocs.io/en/latest/ [compute-doc]https://community.exoscale.com/documentation/compute/ [d-anti_affinity_group]../d/anti_affinity_group.html [d-compute_template]../d/compute_template.html [d-elastic_ip]../d/elastic_ip.html [d-private_network]../d/private_network.html [d-security_group]../d/security_group.html [r-anti_affinity_group]anti_affinity_group.html [r-elastic_ip]../r/elastic_ip.html [r-private_network]../r/private_network.html [r-security_group]security_group.html [remote-exec]https://www.terraform.io/docs/provisioners/remote-exec.html [sshkeypair-doc]https://community.exoscale.com/documentation/compute/ssh-keypairs/ [template]https://www.exoscale.com/templates/ [type]https://www.exoscale.com/pricing/#/compute/ [zone]https://www.exoscale.com/datacenters/

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] anti_affinity_group_ids: A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
        :param pulumi.Input[str] deploy_target_id: A Deploy Target ID.
        :param pulumi.Input[int] disk_size: The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] elastic_ip_ids: A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
        :param pulumi.Input[bool] ipv6: Enable IPv6 on the Compute instance (default: `false`).
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] labels: A map of key/value labels.
        :param pulumi.Input[str] name: The name of the Compute instance.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_network_ids: A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
        :param pulumi.Input[str] ssh_key: The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
        :param pulumi.Input[str] state: The state of the Compute instance (supported values: `started`, `stopped`).
        :param pulumi.Input[str] template_id: The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`get_compute_template`][d-compute_template] data source is recommended.
        :param pulumi.Input[str] type: The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
        :param pulumi.Input[str] user_data: A [cloud-init][cloudinit] configuration.
        :param pulumi.Input[str] zone: The name of the [zone][zone] to deploy the Compute instance into.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ComputeInstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides an Exoscale [Compute instance][compute-doc] resource. This can be used to create, modify, and delete Compute instances.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_exoscale as exoscale

        zone = "ch-gva-2"
        ubuntu = exoscale.get_compute_template(zone=zone,
            name="Linux Ubuntu 20.04 LTS 64-bit")
        web = exoscale.SecurityGroup("web")
        default = exoscale.get_security_group(name="default")
        example = exoscale.ComputeInstance("example",
            zone=zone,
            type="standard.medium",
            template_id=ubuntu.id,
            disk_size=10,
            security_group_ids=[
                default.id,
                web.id,
            ],
            ssh_key="my-key",
            user_data=\"\"\"#cloud-config
        manage_etc_hosts: localhost
        \"\"\")
        ```

        ## Import

        An existing Compute instance can be imported as a resource by `<ID>@<ZONE>`console

        ```sh
         $ pulumi import exoscale:index/computeInstance:ComputeInstance my-instance eb556678-ec59-4be6-8c54-0406ae0f6da6@ch-gva-2
        ```

         [cloudinit]http://cloudinit.readthedocs.io/en/latest/ [compute-doc]https://community.exoscale.com/documentation/compute/ [d-anti_affinity_group]../d/anti_affinity_group.html [d-compute_template]../d/compute_template.html [d-elastic_ip]../d/elastic_ip.html [d-private_network]../d/private_network.html [d-security_group]../d/security_group.html [r-anti_affinity_group]anti_affinity_group.html [r-elastic_ip]../r/elastic_ip.html [r-private_network]../r/private_network.html [r-security_group]security_group.html [remote-exec]https://www.terraform.io/docs/provisioners/remote-exec.html [sshkeypair-doc]https://community.exoscale.com/documentation/compute/ssh-keypairs/ [template]https://www.exoscale.com/templates/ [type]https://www.exoscale.com/pricing/#/compute/ [zone]https://www.exoscale.com/datacenters/

        :param str resource_name: The name of the resource.
        :param ComputeInstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ComputeInstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 anti_affinity_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 deploy_target_id: Optional[pulumi.Input[str]] = None,
                 disk_size: Optional[pulumi.Input[int]] = None,
                 elastic_ip_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ipv6: Optional[pulumi.Input[bool]] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 private_network_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ssh_key: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 template_id: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 zone: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ComputeInstanceArgs.__new__(ComputeInstanceArgs)

            __props__.__dict__["anti_affinity_group_ids"] = anti_affinity_group_ids
            __props__.__dict__["deploy_target_id"] = deploy_target_id
            __props__.__dict__["disk_size"] = disk_size
            __props__.__dict__["elastic_ip_ids"] = elastic_ip_ids
            __props__.__dict__["ipv6"] = ipv6
            __props__.__dict__["labels"] = labels
            __props__.__dict__["name"] = name
            __props__.__dict__["private_network_ids"] = private_network_ids
            __props__.__dict__["security_group_ids"] = security_group_ids
            __props__.__dict__["ssh_key"] = ssh_key
            __props__.__dict__["state"] = state
            if template_id is None and not opts.urn:
                raise TypeError("Missing required property 'template_id'")
            __props__.__dict__["template_id"] = template_id
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["user_data"] = user_data
            if zone is None and not opts.urn:
                raise TypeError("Missing required property 'zone'")
            __props__.__dict__["zone"] = zone
            __props__.__dict__["created_at"] = None
            __props__.__dict__["ipv6_address"] = None
            __props__.__dict__["public_ip_address"] = None
        super(ComputeInstance, __self__).__init__(
            'exoscale:index/computeInstance:ComputeInstance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            anti_affinity_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            created_at: Optional[pulumi.Input[str]] = None,
            deploy_target_id: Optional[pulumi.Input[str]] = None,
            disk_size: Optional[pulumi.Input[int]] = None,
            elastic_ip_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ipv6: Optional[pulumi.Input[bool]] = None,
            ipv6_address: Optional[pulumi.Input[str]] = None,
            labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            private_network_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            public_ip_address: Optional[pulumi.Input[str]] = None,
            security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ssh_key: Optional[pulumi.Input[str]] = None,
            state: Optional[pulumi.Input[str]] = None,
            template_id: Optional[pulumi.Input[str]] = None,
            type: Optional[pulumi.Input[str]] = None,
            user_data: Optional[pulumi.Input[str]] = None,
            zone: Optional[pulumi.Input[str]] = None) -> 'ComputeInstance':
        """
        Get an existing ComputeInstance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] anti_affinity_group_ids: A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
        :param pulumi.Input[str] created_at: The creation date of the Compute instance.
        :param pulumi.Input[str] deploy_target_id: A Deploy Target ID.
        :param pulumi.Input[int] disk_size: The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] elastic_ip_ids: A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
        :param pulumi.Input[bool] ipv6: Enable IPv6 on the Compute instance (default: `false`).
        :param pulumi.Input[str] ipv6_address: The IPv6 address of the Compute instance main network interface.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] labels: A map of key/value labels.
        :param pulumi.Input[str] name: The name of the Compute instance.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] private_network_ids: A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
        :param pulumi.Input[str] public_ip_address: The IPv4 address of the Compute instance's main network interface.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
        :param pulumi.Input[str] ssh_key: The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
        :param pulumi.Input[str] state: The state of the Compute instance (supported values: `started`, `stopped`).
        :param pulumi.Input[str] template_id: The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`get_compute_template`][d-compute_template] data source is recommended.
        :param pulumi.Input[str] type: The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
        :param pulumi.Input[str] user_data: A [cloud-init][cloudinit] configuration.
        :param pulumi.Input[str] zone: The name of the [zone][zone] to deploy the Compute instance into.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ComputeInstanceState.__new__(_ComputeInstanceState)

        __props__.__dict__["anti_affinity_group_ids"] = anti_affinity_group_ids
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["deploy_target_id"] = deploy_target_id
        __props__.__dict__["disk_size"] = disk_size
        __props__.__dict__["elastic_ip_ids"] = elastic_ip_ids
        __props__.__dict__["ipv6"] = ipv6
        __props__.__dict__["ipv6_address"] = ipv6_address
        __props__.__dict__["labels"] = labels
        __props__.__dict__["name"] = name
        __props__.__dict__["private_network_ids"] = private_network_ids
        __props__.__dict__["public_ip_address"] = public_ip_address
        __props__.__dict__["security_group_ids"] = security_group_ids
        __props__.__dict__["ssh_key"] = ssh_key
        __props__.__dict__["state"] = state
        __props__.__dict__["template_id"] = template_id
        __props__.__dict__["type"] = type
        __props__.__dict__["user_data"] = user_data
        __props__.__dict__["zone"] = zone
        return ComputeInstance(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="antiAffinityGroupIds")
    def anti_affinity_group_ids(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
        """
        return pulumi.get(self, "anti_affinity_group_ids")

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[str]:
        """
        The creation date of the Compute instance.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="deployTargetId")
    def deploy_target_id(self) -> pulumi.Output[Optional[str]]:
        """
        A Deploy Target ID.
        """
        return pulumi.get(self, "deploy_target_id")

    @property
    @pulumi.getter(name="diskSize")
    def disk_size(self) -> pulumi.Output[int]:
        """
        The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
        """
        return pulumi.get(self, "disk_size")

    @property
    @pulumi.getter(name="elasticIpIds")
    def elastic_ip_ids(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
        """
        return pulumi.get(self, "elastic_ip_ids")

    @property
    @pulumi.getter
    def ipv6(self) -> pulumi.Output[Optional[bool]]:
        """
        Enable IPv6 on the Compute instance (default: `false`).
        """
        return pulumi.get(self, "ipv6")

    @property
    @pulumi.getter(name="ipv6Address")
    def ipv6_address(self) -> pulumi.Output[str]:
        """
        The IPv6 address of the Compute instance main network interface.
        """
        return pulumi.get(self, "ipv6_address")

    @property
    @pulumi.getter
    def labels(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        A map of key/value labels.
        """
        return pulumi.get(self, "labels")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the Compute instance.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="privateNetworkIds")
    def private_network_ids(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
        """
        return pulumi.get(self, "private_network_ids")

    @property
    @pulumi.getter(name="publicIpAddress")
    def public_ip_address(self) -> pulumi.Output[str]:
        """
        The IPv4 address of the Compute instance's main network interface.
        """
        return pulumi.get(self, "public_ip_address")

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
        """
        return pulumi.get(self, "security_group_ids")

    @property
    @pulumi.getter(name="sshKey")
    def ssh_key(self) -> pulumi.Output[Optional[str]]:
        """
        The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
        """
        return pulumi.get(self, "ssh_key")

    @property
    @pulumi.getter
    def state(self) -> pulumi.Output[str]:
        """
        The state of the Compute instance (supported values: `started`, `stopped`).
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="templateId")
    def template_id(self) -> pulumi.Output[str]:
        """
        The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`get_compute_template`][d-compute_template] data source is recommended.
        """
        return pulumi.get(self, "template_id")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="userData")
    def user_data(self) -> pulumi.Output[Optional[str]]:
        """
        A [cloud-init][cloudinit] configuration.
        """
        return pulumi.get(self, "user_data")

    @property
    @pulumi.getter
    def zone(self) -> pulumi.Output[str]:
        """
        The name of the [zone][zone] to deploy the Compute instance into.
        """
        return pulumi.get(self, "zone")

