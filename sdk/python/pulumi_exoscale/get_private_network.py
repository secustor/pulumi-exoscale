# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetPrivateNetworkResult',
    'AwaitableGetPrivateNetworkResult',
    'get_private_network',
    'get_private_network_output',
]

@pulumi.output_type
class GetPrivateNetworkResult:
    """
    A collection of values returned by getPrivateNetwork.
    """
    def __init__(__self__, description=None, end_ip=None, id=None, name=None, netmask=None, start_ip=None, zone=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if end_ip and not isinstance(end_ip, str):
            raise TypeError("Expected argument 'end_ip' to be a str")
        pulumi.set(__self__, "end_ip", end_ip)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if netmask and not isinstance(netmask, str):
            raise TypeError("Expected argument 'netmask' to be a str")
        pulumi.set(__self__, "netmask", netmask)
        if start_ip and not isinstance(start_ip, str):
            raise TypeError("Expected argument 'start_ip' to be a str")
        pulumi.set(__self__, "start_ip", start_ip)
        if zone and not isinstance(zone, str):
            raise TypeError("Expected argument 'zone' to be a str")
        pulumi.set(__self__, "zone", zone)

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        The description of the Private Network.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="endIp")
    def end_ip(self) -> str:
        """
        The last address of the IP range used by the DHCP service (for *managed* Private Networks).
        """
        return pulumi.get(self, "end_ip")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def netmask(self) -> str:
        """
        The netmask defining the IP network allowed for the static lease (for *managed* Private Networks).
        """
        return pulumi.get(self, "netmask")

    @property
    @pulumi.getter(name="startIp")
    def start_ip(self) -> str:
        """
        The first address of IP range used by the DHCP service to automatically assign (for *managed* Private Networks).
        """
        return pulumi.get(self, "start_ip")

    @property
    @pulumi.getter
    def zone(self) -> str:
        return pulumi.get(self, "zone")


class AwaitableGetPrivateNetworkResult(GetPrivateNetworkResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPrivateNetworkResult(
            description=self.description,
            end_ip=self.end_ip,
            id=self.id,
            name=self.name,
            netmask=self.netmask,
            start_ip=self.start_ip,
            zone=self.zone)


def get_private_network(description: Optional[str] = None,
                        id: Optional[str] = None,
                        name: Optional[str] = None,
                        zone: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPrivateNetworkResult:
    """
    Provides information on a [Private Network][privnet-doc] for use in other resources such as a [`InstancePool`][r-instance_pool] resource.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_exoscale as exoscale

    zone = "ch-gva-2"
    db = exoscale.get_private_network(zone=zone,
        name="db")
    ubuntu = exoscale.get_compute_template(zone=zone,
        name="Linux Ubuntu 20.04 LTS 64-bit")
    webservers = exoscale.InstancePool("webservers",
        zone=zone,
        template_id=ubuntu.id,
        size=5,
        service_offering="standard.medium",
        network_ids=[db.id])
    ```


    :param str description: The description of the Private Network.
    :param str id: The ID of the Private Network (conflicts with `name`).
    :param str name: The name of the Private Network (conflicts with `id`).
    :param str zone: The [zone][zone] of the Private Network.
    """
    __args__ = dict()
    __args__['description'] = description
    __args__['id'] = id
    __args__['name'] = name
    __args__['zone'] = zone
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('exoscale:index/getPrivateNetwork:getPrivateNetwork', __args__, opts=opts, typ=GetPrivateNetworkResult).value

    return AwaitableGetPrivateNetworkResult(
        description=__ret__.description,
        end_ip=__ret__.end_ip,
        id=__ret__.id,
        name=__ret__.name,
        netmask=__ret__.netmask,
        start_ip=__ret__.start_ip,
        zone=__ret__.zone)


@_utilities.lift_output_func(get_private_network)
def get_private_network_output(description: Optional[pulumi.Input[Optional[str]]] = None,
                               id: Optional[pulumi.Input[Optional[str]]] = None,
                               name: Optional[pulumi.Input[Optional[str]]] = None,
                               zone: Optional[pulumi.Input[str]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPrivateNetworkResult]:
    """
    Provides information on a [Private Network][privnet-doc] for use in other resources such as a [`InstancePool`][r-instance_pool] resource.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_exoscale as exoscale

    zone = "ch-gva-2"
    db = exoscale.get_private_network(zone=zone,
        name="db")
    ubuntu = exoscale.get_compute_template(zone=zone,
        name="Linux Ubuntu 20.04 LTS 64-bit")
    webservers = exoscale.InstancePool("webservers",
        zone=zone,
        template_id=ubuntu.id,
        size=5,
        service_offering="standard.medium",
        network_ids=[db.id])
    ```


    :param str description: The description of the Private Network.
    :param str id: The ID of the Private Network (conflicts with `name`).
    :param str name: The name of the Private Network (conflicts with `id`).
    :param str zone: The [zone][zone] of the Private Network.
    """
    ...
