# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetComputeIPAddressResult',
    'AwaitableGetComputeIPAddressResult',
    'get_compute_ip_address',
    'get_compute_ip_address_output',
]

@pulumi.output_type
class GetComputeIPAddressResult:
    """
    A collection of values returned by getComputeIPAddress.
    """
    def __init__(__self__, description=None, id=None, ip_address=None, tags=None, zone=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ip_address and not isinstance(ip_address, str):
            raise TypeError("Expected argument 'ip_address' to be a str")
        pulumi.set(__self__, "ip_address", ip_address)
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        pulumi.set(__self__, "tags", tags)
        if zone and not isinstance(zone, str):
            raise TypeError("Expected argument 'zone' to be a str")
        pulumi.set(__self__, "zone", zone)

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[str]:
        return pulumi.get(self, "ip_address")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Mapping[str, str]]:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def zone(self) -> str:
        return pulumi.get(self, "zone")


class AwaitableGetComputeIPAddressResult(GetComputeIPAddressResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetComputeIPAddressResult(
            description=self.description,
            id=self.id,
            ip_address=self.ip_address,
            tags=self.tags,
            zone=self.zone)


def get_compute_ip_address(description: Optional[str] = None,
                           id: Optional[str] = None,
                           ip_address: Optional[str] = None,
                           tags: Optional[Mapping[str, str]] = None,
                           zone: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetComputeIPAddressResult:
    """
    Provides information on a Compute [Elastic IP address][eip-doc].

    !> **WARNING:** This data source is deprecated and will be removed in the next major version.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_exoscale as exoscale

    zone = "ch-gva-2"
    eip = exoscale.get_compute_ip_address(zone=zone,
        ip_address="159.162.3.4")
    ```


    :param str description: The Description to find the IP Address.
    :param str id: The ID of the IP Address.
    :param str ip_address: The IP Address of the EIP.
    :param Mapping[str, str] tags: The tags to find the IP Address.
    :param str zone: The name of the [zone][zone] where to look for the IP Address.
    """
    __args__ = dict()
    __args__['description'] = description
    __args__['id'] = id
    __args__['ipAddress'] = ip_address
    __args__['tags'] = tags
    __args__['zone'] = zone
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('exoscale:index/getComputeIPAddress:getComputeIPAddress', __args__, opts=opts, typ=GetComputeIPAddressResult).value

    return AwaitableGetComputeIPAddressResult(
        description=__ret__.description,
        id=__ret__.id,
        ip_address=__ret__.ip_address,
        tags=__ret__.tags,
        zone=__ret__.zone)


@_utilities.lift_output_func(get_compute_ip_address)
def get_compute_ip_address_output(description: Optional[pulumi.Input[Optional[str]]] = None,
                                  id: Optional[pulumi.Input[Optional[str]]] = None,
                                  ip_address: Optional[pulumi.Input[Optional[str]]] = None,
                                  tags: Optional[pulumi.Input[Optional[Mapping[str, str]]]] = None,
                                  zone: Optional[pulumi.Input[str]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetComputeIPAddressResult]:
    """
    Provides information on a Compute [Elastic IP address][eip-doc].

    !> **WARNING:** This data source is deprecated and will be removed in the next major version.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_exoscale as exoscale

    zone = "ch-gva-2"
    eip = exoscale.get_compute_ip_address(zone=zone,
        ip_address="159.162.3.4")
    ```


    :param str description: The Description to find the IP Address.
    :param str id: The ID of the IP Address.
    :param str ip_address: The IP Address of the EIP.
    :param Mapping[str, str] tags: The tags to find the IP Address.
    :param str zone: The name of the [zone][zone] where to look for the IP Address.
    """
    ...
