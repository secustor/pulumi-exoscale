// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides an Exoscale Instance Pool resource. This can be used to create, modify, and delete Instance Pools.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as exoscale from "@pulumi/exoscale";
 *
 * const config = new pulumi.Config();
 * const zone = config.get("zone") || "de-fra-1";
 * const webappSSHKey = new exoscale.SSHKey("webappSSHKey", {});
 * const webappSecurityGroup = new exoscale.SecurityGroup("webappSecurityGroup", {description: "my-web-app"});
 * const webappPrivateNetwork = new exoscale.PrivateNetwork("webappPrivateNetwork", {zone: zone});
 * const webappElasticIP = new exoscale.ElasticIP("webappElasticIP", {zone: zone});
 * const webappComputeTemplate = exoscale.getComputeTemplate({
 *     zone: zone,
 *     name: "my-web-app",
 *     filter: "mine",
 * });
 * const webappInstancePool = new exoscale.InstancePool("webappInstancePool", {
 *     zone: zone,
 *     size: 3,
 *     templateId: webappComputeTemplate.then(webappComputeTemplate => webappComputeTemplate.id),
 *     instanceType: "standard.medium",
 *     diskSize: 50,
 *     keyPair: webappSSHKey.name,
 *     instancePrefix: "my-web-app",
 *     securityGroupIds: [webappSecurityGroup.id],
 *     elasticIpIds: [exoscale_ipaddress.webapp.id],
 *     networkIds: [webappPrivateNetwork.id],
 *     userData: `#cloud-config
 * package_upgrade: true
 * `,
 *     labels: {
 *         app: "webapp",
 *         env: "prod",
 *     },
 *     timeouts: [{
 *         "delete": "10m",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * An existing Instance Pool can be imported as a resource by `<ID>@<ZONE>`console
 *
 * ```sh
 *  $ pulumi import exoscale:index/instancePool:InstancePool example eb556678-ec59-4be6-8c54-0406ae0f6da6@de-fra-1
 * ```
 *
 *  [cloudinit]http://cloudinit.readthedocs.io/en/latest/ [d-compute_template]../d/compute_template.html [eip-doc]https://community.exoscale.com/documentation/compute/eip/ [privnet-doc]https://community.exoscale.com/documentation/compute/private-networks/ [r-affinity]affinity.html [r-security_group]security_group.html [sshkeypair]https://community.exoscale.com/documentation/compute/ssh-keypairs/ [template]https://www.exoscale.com/templates/ [type]https://www.exoscale.com/pricing/#/compute/ [zone]https://www.exoscale.com/datacenters/
 */
export class InstancePool extends pulumi.CustomResource {
    /**
     * Get an existing InstancePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstancePoolState, opts?: pulumi.CustomResourceOptions): InstancePool {
        return new InstancePool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'exoscale:index/instancePool:InstancePool';

    /**
     * Returns true if the given object is an instance of InstancePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstancePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstancePool.__pulumiType;
    }

    /**
     * A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only).
     */
    public readonly affinityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * A Deploy Target ID.
     */
    public readonly deployTargetId!: pulumi.Output<string | undefined>;
    /**
     * The description of the Instance Pool.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The managed Compute instances disk size.
     */
    public readonly diskSize!: pulumi.Output<number>;
    /**
     * A list of [Elastic IP][eip-doc] IDs.
     */
    public readonly elasticIpIds!: pulumi.Output<string[] | undefined>;
    /**
     * The string to add as prefix to managed Compute instances name (default: `pool`).
     */
    public readonly instancePrefix!: pulumi.Output<string | undefined>;
    /**
     * The managed Compute instances [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * Enable IPv6 on managed Compute instances (default: `false`).
     */
    public readonly ipv6!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the [SSH key pair][sshkeypair] to install when creating Compute instances.
     */
    public readonly keyPair!: pulumi.Output<string | undefined>;
    /**
     * A map of key/value labels.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name of the Instance Pool.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A list of [Private Network][privnet-doc] IDs.
     */
    public readonly networkIds!: pulumi.Output<string[] | undefined>;
    /**
     * A list of [Security Group][r-security_group] IDs (at creation time only).
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * **Deprecated** The managed Compute instances size. Replaced by `instanceType`.
     *
     * @deprecated This attribute has been replaced by "instance_type".
     */
    public readonly serviceOffering!: pulumi.Output<string>;
    /**
     * The number of Compute instance members the Instance Pool manages.
     */
    public readonly size!: pulumi.Output<number>;
    public readonly state!: pulumi.Output<string>;
    /**
     * The ID of the instance [template][template] to use when creating Compute instances. Usage of the [`computeTemplate`][d-compute_template] data source is recommended.
     */
    public readonly templateId!: pulumi.Output<string>;
    /**
     * A [cloud-init][cloudinit] configuration to apply when creating Compute instances. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    /**
     * The list of Instance Pool members (Compute instance IDs).
     */
    public readonly virtualMachines!: pulumi.Output<string[]>;
    /**
     * The name of the [zone][zone] to deploy the Instance Pool into.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a InstancePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstancePoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstancePoolArgs | InstancePoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstancePoolState | undefined;
            resourceInputs["affinityGroupIds"] = state ? state.affinityGroupIds : undefined;
            resourceInputs["deployTargetId"] = state ? state.deployTargetId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["diskSize"] = state ? state.diskSize : undefined;
            resourceInputs["elasticIpIds"] = state ? state.elasticIpIds : undefined;
            resourceInputs["instancePrefix"] = state ? state.instancePrefix : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["ipv6"] = state ? state.ipv6 : undefined;
            resourceInputs["keyPair"] = state ? state.keyPair : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkIds"] = state ? state.networkIds : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["serviceOffering"] = state ? state.serviceOffering : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["virtualMachines"] = state ? state.virtualMachines : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as InstancePoolArgs | undefined;
            if ((!args || args.size === undefined) && !opts.urn) {
                throw new Error("Missing required property 'size'");
            }
            if ((!args || args.templateId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateId'");
            }
            if ((!args || args.zone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            resourceInputs["affinityGroupIds"] = args ? args.affinityGroupIds : undefined;
            resourceInputs["deployTargetId"] = args ? args.deployTargetId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["diskSize"] = args ? args.diskSize : undefined;
            resourceInputs["elasticIpIds"] = args ? args.elasticIpIds : undefined;
            resourceInputs["instancePrefix"] = args ? args.instancePrefix : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["ipv6"] = args ? args.ipv6 : undefined;
            resourceInputs["keyPair"] = args ? args.keyPair : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkIds"] = args ? args.networkIds : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["serviceOffering"] = args ? args.serviceOffering : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["templateId"] = args ? args.templateId : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["virtualMachines"] = args ? args.virtualMachines : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstancePool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InstancePool resources.
 */
export interface InstancePoolState {
    /**
     * A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only).
     */
    affinityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Deploy Target ID.
     */
    deployTargetId?: pulumi.Input<string>;
    /**
     * The description of the Instance Pool.
     */
    description?: pulumi.Input<string>;
    /**
     * The managed Compute instances disk size.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * A list of [Elastic IP][eip-doc] IDs.
     */
    elasticIpIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The string to add as prefix to managed Compute instances name (default: `pool`).
     */
    instancePrefix?: pulumi.Input<string>;
    /**
     * The managed Compute instances [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Enable IPv6 on managed Compute instances (default: `false`).
     */
    ipv6?: pulumi.Input<boolean>;
    /**
     * The name of the [SSH key pair][sshkeypair] to install when creating Compute instances.
     */
    keyPair?: pulumi.Input<string>;
    /**
     * A map of key/value labels.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the Instance Pool.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of [Private Network][privnet-doc] IDs.
     */
    networkIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of [Security Group][r-security_group] IDs (at creation time only).
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * **Deprecated** The managed Compute instances size. Replaced by `instanceType`.
     *
     * @deprecated This attribute has been replaced by "instance_type".
     */
    serviceOffering?: pulumi.Input<string>;
    /**
     * The number of Compute instance members the Instance Pool manages.
     */
    size?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    /**
     * The ID of the instance [template][template] to use when creating Compute instances. Usage of the [`computeTemplate`][d-compute_template] data source is recommended.
     */
    templateId?: pulumi.Input<string>;
    /**
     * A [cloud-init][cloudinit] configuration to apply when creating Compute instances. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
     */
    userData?: pulumi.Input<string>;
    /**
     * The list of Instance Pool members (Compute instance IDs).
     */
    virtualMachines?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the [zone][zone] to deploy the Instance Pool into.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InstancePool resource.
 */
export interface InstancePoolArgs {
    /**
     * A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only).
     */
    affinityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Deploy Target ID.
     */
    deployTargetId?: pulumi.Input<string>;
    /**
     * The description of the Instance Pool.
     */
    description?: pulumi.Input<string>;
    /**
     * The managed Compute instances disk size.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * A list of [Elastic IP][eip-doc] IDs.
     */
    elasticIpIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The string to add as prefix to managed Compute instances name (default: `pool`).
     */
    instancePrefix?: pulumi.Input<string>;
    /**
     * The managed Compute instances [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Enable IPv6 on managed Compute instances (default: `false`).
     */
    ipv6?: pulumi.Input<boolean>;
    /**
     * The name of the [SSH key pair][sshkeypair] to install when creating Compute instances.
     */
    keyPair?: pulumi.Input<string>;
    /**
     * A map of key/value labels.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the Instance Pool.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of [Private Network][privnet-doc] IDs.
     */
    networkIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of [Security Group][r-security_group] IDs (at creation time only).
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * **Deprecated** The managed Compute instances size. Replaced by `instanceType`.
     *
     * @deprecated This attribute has been replaced by "instance_type".
     */
    serviceOffering?: pulumi.Input<string>;
    /**
     * The number of Compute instance members the Instance Pool manages.
     */
    size: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    /**
     * The ID of the instance [template][template] to use when creating Compute instances. Usage of the [`computeTemplate`][d-compute_template] data source is recommended.
     */
    templateId: pulumi.Input<string>;
    /**
     * A [cloud-init][cloudinit] configuration to apply when creating Compute instances. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
     */
    userData?: pulumi.Input<string>;
    /**
     * The list of Instance Pool members (Compute instance IDs).
     */
    virtualMachines?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the [zone][zone] to deploy the Instance Pool into.
     */
    zone: pulumi.Input<string>;
}
