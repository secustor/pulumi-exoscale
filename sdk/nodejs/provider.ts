// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the exoscale package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'exoscale';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Provider.__pulumiType;
    }

    /**
     * Exoscale CloudStack API endpoint (by default: https://api.exoscale.com/v1)
     */
    public readonly computeEndpoint!: pulumi.Output<string | undefined>;
    /**
     * CloudStack ini configuration filename (by default: cloudstack.ini)
     */
    public readonly config!: pulumi.Output<string | undefined>;
    /**
     * Exoscale DNS API endpoint (by default: https://api.exoscale.com/dns)
     */
    public readonly dnsEndpoint!: pulumi.Output<string>;
    public readonly environment!: pulumi.Output<string | undefined>;
    /**
     * Exoscale API key
     */
    public readonly key!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Use region instead
     */
    public readonly profile!: pulumi.Output<string | undefined>;
    /**
     * CloudStack ini configuration section name (by default: cloudstack)
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * Exoscale API secret
     */
    public readonly secret!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Use key instead
     */
    public readonly token!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            if ((!args || args.dnsEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dnsEndpoint'");
            }
            if ((!args || args.timeout === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeout'");
            }
            resourceInputs["computeEndpoint"] = args ? args.computeEndpoint : undefined;
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["delay"] = pulumi.output(args ? args.delay : undefined).apply(JSON.stringify);
            resourceInputs["dnsEndpoint"] = args ? args.dnsEndpoint : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["gzipUserData"] = pulumi.output(args ? args.gzipUserData : undefined).apply(JSON.stringify);
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["timeout"] = pulumi.output(args ? args.timeout : undefined).apply(JSON.stringify);
            resourceInputs["token"] = args ? args.token : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * Exoscale CloudStack API endpoint (by default: https://api.exoscale.com/v1)
     */
    computeEndpoint?: pulumi.Input<string>;
    /**
     * CloudStack ini configuration filename (by default: cloudstack.ini)
     */
    config?: pulumi.Input<string>;
    /**
     * @deprecated Does nothing
     */
    delay?: pulumi.Input<number>;
    /**
     * Exoscale DNS API endpoint (by default: https://api.exoscale.com/dns)
     */
    dnsEndpoint: pulumi.Input<string>;
    environment?: pulumi.Input<string>;
    /**
     * Defines if the user-data of compute instances should be gzipped (by default: true)
     */
    gzipUserData?: pulumi.Input<boolean>;
    /**
     * Exoscale API key
     */
    key?: pulumi.Input<string>;
    /**
     * @deprecated Use region instead
     */
    profile?: pulumi.Input<string>;
    /**
     * CloudStack ini configuration section name (by default: cloudstack)
     */
    region?: pulumi.Input<string>;
    /**
     * Exoscale API secret
     */
    secret?: pulumi.Input<string>;
    /**
     * Timeout in seconds for waiting on compute resources to become available (by default: 300)
     */
    timeout: pulumi.Input<number>;
    /**
     * @deprecated Use key instead
     */
    token?: pulumi.Input<string>;
}
