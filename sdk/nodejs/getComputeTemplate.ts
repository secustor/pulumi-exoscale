// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides information on a Compute [template][templates] for use in other resources such as a [`exoscale.Compute`][r-compute] resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as exoscale from "@pulumi/exoscale";
 *
 * const zone = "ch-gva-2";
 * const ubuntu = exoscale.getComputeTemplate({
 *     zone: zone,
 *     name: "Linux Ubuntu 20.04 LTS 64-bit",
 * });
 * const my_server = new exoscale.ComputeInstance("my-server", {
 *     zone: zone,
 *     type: "standard.medium",
 *     templateId: ubuntu.then(ubuntu => ubuntu.id),
 *     diskSize: 20,
 * });
 * ```
 */
export function getComputeTemplate(args: GetComputeTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeTemplateResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("exoscale:index/getComputeTemplate:getComputeTemplate", {
        "filter": args.filter,
        "id": args.id,
        "name": args.name,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputeTemplate.
 */
export interface GetComputeTemplateArgs {
    /**
     * A Compute template search filter, must be either `featured` (official Exoscale templates), `community` (community-contributed templates) or `mine` (custom templates private to my organization). Default is `featured`.
     */
    filter?: string;
    /**
     * The ID of the Compute template (conflicts with `name`).
     */
    id?: string;
    /**
     * The name of the Compute template (conflicts with `id`).
     */
    name?: string;
    /**
     * The name of the [zone][zone] where to look for the Compute template.
     */
    zone: string;
}

/**
 * A collection of values returned by getComputeTemplate.
 */
export interface GetComputeTemplateResult {
    readonly filter?: string;
    readonly id?: string;
    readonly name?: string;
    /**
     * Username to use to log into a Compute Instance based on this template
     */
    readonly username: string;
    readonly zone: string;
}

export function getComputeTemplateOutput(args: GetComputeTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeTemplateResult> {
    return pulumi.output(args).apply(a => getComputeTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getComputeTemplate.
 */
export interface GetComputeTemplateOutputArgs {
    /**
     * A Compute template search filter, must be either `featured` (official Exoscale templates), `community` (community-contributed templates) or `mine` (custom templates private to my organization). Default is `featured`.
     */
    filter?: pulumi.Input<string>;
    /**
     * The ID of the Compute template (conflicts with `name`).
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the Compute template (conflicts with `id`).
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the [zone][zone] where to look for the Compute template.
     */
    zone: pulumi.Input<string>;
}
