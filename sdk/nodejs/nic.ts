// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides an Exoscale Compute instance [Private Network][privnet-doc] Interface (NIC) resource. This can be used to create, update and delete Compute instance NICs.
 *
 * !> **WARNING:** This resource is deprecated and will be removed in the next major version.
 *
 * ## Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as exoscale from "@pulumi/exoscale";
 *
 * const vm1 = new exoscale.Compute("vm1", {});
 * // ...
 * const oobNetwork = new exoscale.Network("oobNetwork", {});
 * // ...
 * const oobNIC = new exoscale.NIC("oobNIC", {
 *     computeId: vm1.id,
 *     networkId: oobNetwork.id,
 * });
 * ```
 *
 * ## Import
 *
 * This resource is automatically imported when importing an `exoscale_compute` resource. [privnet-doc]https://community.exoscale.com/documentation/compute/private-networks/ [r-compute]compute.html [r-network]network.html
 */
export class NIC extends pulumi.CustomResource {
    /**
     * Get an existing NIC resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NICState, opts?: pulumi.CustomResourceOptions): NIC {
        return new NIC(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'exoscale:index/nIC:NIC';

    /**
     * Returns true if the given object is an instance of NIC.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NIC {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NIC.__pulumiType;
    }

    /**
     * The [Compute instance][r-compute] ID.
     */
    public readonly computeId!: pulumi.Output<string>;
    public /*out*/ readonly gateway!: pulumi.Output<string>;
    /**
     * The IP address to request as static DHCP lease if the NIC is attached to a *managed* Private Network (see the [`exoscale.Network`][r-network] resource).
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * The physical address (MAC) of the Compute instance NIC.
     */
    public /*out*/ readonly macAddress!: pulumi.Output<string>;
    public /*out*/ readonly netmask!: pulumi.Output<string>;
    /**
     * The [Private Network][r-network] ID.
     */
    public readonly networkId!: pulumi.Output<string>;

    /**
     * Create a NIC resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NICArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NICArgs | NICState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NICState | undefined;
            resourceInputs["computeId"] = state ? state.computeId : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["netmask"] = state ? state.netmask : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
        } else {
            const args = argsOrState as NICArgs | undefined;
            if ((!args || args.computeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeId'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            resourceInputs["computeId"] = args ? args.computeId : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["gateway"] = undefined /*out*/;
            resourceInputs["macAddress"] = undefined /*out*/;
            resourceInputs["netmask"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NIC.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NIC resources.
 */
export interface NICState {
    /**
     * The [Compute instance][r-compute] ID.
     */
    computeId?: pulumi.Input<string>;
    gateway?: pulumi.Input<string>;
    /**
     * The IP address to request as static DHCP lease if the NIC is attached to a *managed* Private Network (see the [`exoscale.Network`][r-network] resource).
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The physical address (MAC) of the Compute instance NIC.
     */
    macAddress?: pulumi.Input<string>;
    netmask?: pulumi.Input<string>;
    /**
     * The [Private Network][r-network] ID.
     */
    networkId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NIC resource.
 */
export interface NICArgs {
    /**
     * The [Compute instance][r-compute] ID.
     */
    computeId: pulumi.Input<string>;
    /**
     * The IP address to request as static DHCP lease if the NIC is attached to a *managed* Private Network (see the [`exoscale.Network`][r-network] resource).
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The [Private Network][r-network] ID.
     */
    networkId: pulumi.Input<string>;
}
