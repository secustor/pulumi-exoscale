// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Exoscale [Elastic IP address][eip-doc] resource. This can be used to create, update and delete Elastic IPs.
//
// See [`SecondaryIPAddress`][r-secondary_ipaddress] for usage with Compute instances.
//
// !> **WARNING:** This resource is deprecated and will be removed in the next major version.
//
// ## Import
//
// An existing Elastic IP can be imported as a resource by address or IDconsole # By address
//
// ```sh
//  $ pulumi import exoscale:index/iPAddress:IPAddress myip 159.100.251.224
// ```
//
// # By ID
//
// ```sh
//  $ pulumi import exoscale:index/iPAddress:IPAddress myip eb556678-ec59-4be6-8c54-0406ae0f6da6
// ```
//
//  [eip-doc]https://community.exoscale.com/documentation/compute/eip/ [r-secondary_ipaddress]secondary_ipaddress.html [zone]https://www.exoscale.com/datacenters/
type IPAddress struct {
	pulumi.CustomResourceState

	// The description of the Elastic IP.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The healthcheck probing interval in seconds (must be between `5` and `300`).
	HealthcheckInterval pulumi.IntPtrOutput `pulumi:"healthcheckInterval"`
	// The healthcheck probing mode (must be `tcp`, `http` or `https`).
	HealthcheckMode pulumi.StringPtrOutput `pulumi:"healthcheckMode"`
	// The healthcheck probe HTTP request path (must be specified in `http`/`https` modes).
	HealthcheckPath pulumi.StringPtrOutput `pulumi:"healthcheckPath"`
	// The healthcheck service port to probe (must be between `1` and `65535`).
	HealthcheckPort pulumi.IntPtrOutput `pulumi:"healthcheckPort"`
	// The number of unsuccessful healthcheck probes before considering the target unhealthy (must be between `1` and `20`).
	HealthcheckStrikesFail pulumi.IntPtrOutput `pulumi:"healthcheckStrikesFail"`
	// The number of successful healthcheck probes before considering the target healthy (must be between `1` and `20`).
	HealthcheckStrikesOk pulumi.IntPtrOutput `pulumi:"healthcheckStrikesOk"`
	// The time in seconds before considering a healthcheck probing failed (must be between `2` and `60`).
	HealthcheckTimeout pulumi.IntPtrOutput `pulumi:"healthcheckTimeout"`
	// Disable TLS certificate validation in `https` mode. Note: this parameter can only be changed to `true`, it cannot be reset to `false` later on (requires a resource re-creation).
	HealthcheckTlsSkipVerify pulumi.BoolPtrOutput `pulumi:"healthcheckTlsSkipVerify"`
	// The healthcheck TLS server name to specify in `https` mode. Note: this parameter can only be changed to a non-empty value, it cannot be reset to its default empty value later on (requires a resource re-creation).
	HealthcheckTlsSni pulumi.StringPtrOutput `pulumi:"healthcheckTlsSni"`
	// The Elastic IP address.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// A reverse DNS record to set for the Elastic IP.
	ReverseDns pulumi.StringPtrOutput `pulumi:"reverseDns"`
	// A dictionary of tags (key/value). To remove all tags, set `tags = {}`.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The name of the [zone][zone] to create the Elastic IP into.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewIPAddress registers a new resource with the given unique name, arguments, and options.
func NewIPAddress(ctx *pulumi.Context,
	name string, args *IPAddressArgs, opts ...pulumi.ResourceOption) (*IPAddress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	var resource IPAddress
	err := ctx.RegisterResource("exoscale:index/iPAddress:IPAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIPAddress gets an existing IPAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIPAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IPAddressState, opts ...pulumi.ResourceOption) (*IPAddress, error) {
	var resource IPAddress
	err := ctx.ReadResource("exoscale:index/iPAddress:IPAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IPAddress resources.
type ipaddressState struct {
	// The description of the Elastic IP.
	Description *string `pulumi:"description"`
	// The healthcheck probing interval in seconds (must be between `5` and `300`).
	HealthcheckInterval *int `pulumi:"healthcheckInterval"`
	// The healthcheck probing mode (must be `tcp`, `http` or `https`).
	HealthcheckMode *string `pulumi:"healthcheckMode"`
	// The healthcheck probe HTTP request path (must be specified in `http`/`https` modes).
	HealthcheckPath *string `pulumi:"healthcheckPath"`
	// The healthcheck service port to probe (must be between `1` and `65535`).
	HealthcheckPort *int `pulumi:"healthcheckPort"`
	// The number of unsuccessful healthcheck probes before considering the target unhealthy (must be between `1` and `20`).
	HealthcheckStrikesFail *int `pulumi:"healthcheckStrikesFail"`
	// The number of successful healthcheck probes before considering the target healthy (must be between `1` and `20`).
	HealthcheckStrikesOk *int `pulumi:"healthcheckStrikesOk"`
	// The time in seconds before considering a healthcheck probing failed (must be between `2` and `60`).
	HealthcheckTimeout *int `pulumi:"healthcheckTimeout"`
	// Disable TLS certificate validation in `https` mode. Note: this parameter can only be changed to `true`, it cannot be reset to `false` later on (requires a resource re-creation).
	HealthcheckTlsSkipVerify *bool `pulumi:"healthcheckTlsSkipVerify"`
	// The healthcheck TLS server name to specify in `https` mode. Note: this parameter can only be changed to a non-empty value, it cannot be reset to its default empty value later on (requires a resource re-creation).
	HealthcheckTlsSni *string `pulumi:"healthcheckTlsSni"`
	// The Elastic IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// A reverse DNS record to set for the Elastic IP.
	ReverseDns *string `pulumi:"reverseDns"`
	// A dictionary of tags (key/value). To remove all tags, set `tags = {}`.
	Tags map[string]string `pulumi:"tags"`
	// The name of the [zone][zone] to create the Elastic IP into.
	Zone *string `pulumi:"zone"`
}

type IPAddressState struct {
	// The description of the Elastic IP.
	Description pulumi.StringPtrInput
	// The healthcheck probing interval in seconds (must be between `5` and `300`).
	HealthcheckInterval pulumi.IntPtrInput
	// The healthcheck probing mode (must be `tcp`, `http` or `https`).
	HealthcheckMode pulumi.StringPtrInput
	// The healthcheck probe HTTP request path (must be specified in `http`/`https` modes).
	HealthcheckPath pulumi.StringPtrInput
	// The healthcheck service port to probe (must be between `1` and `65535`).
	HealthcheckPort pulumi.IntPtrInput
	// The number of unsuccessful healthcheck probes before considering the target unhealthy (must be between `1` and `20`).
	HealthcheckStrikesFail pulumi.IntPtrInput
	// The number of successful healthcheck probes before considering the target healthy (must be between `1` and `20`).
	HealthcheckStrikesOk pulumi.IntPtrInput
	// The time in seconds before considering a healthcheck probing failed (must be between `2` and `60`).
	HealthcheckTimeout pulumi.IntPtrInput
	// Disable TLS certificate validation in `https` mode. Note: this parameter can only be changed to `true`, it cannot be reset to `false` later on (requires a resource re-creation).
	HealthcheckTlsSkipVerify pulumi.BoolPtrInput
	// The healthcheck TLS server name to specify in `https` mode. Note: this parameter can only be changed to a non-empty value, it cannot be reset to its default empty value later on (requires a resource re-creation).
	HealthcheckTlsSni pulumi.StringPtrInput
	// The Elastic IP address.
	IpAddress pulumi.StringPtrInput
	// A reverse DNS record to set for the Elastic IP.
	ReverseDns pulumi.StringPtrInput
	// A dictionary of tags (key/value). To remove all tags, set `tags = {}`.
	Tags pulumi.StringMapInput
	// The name of the [zone][zone] to create the Elastic IP into.
	Zone pulumi.StringPtrInput
}

func (IPAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipaddressState)(nil)).Elem()
}

type ipaddressArgs struct {
	// The description of the Elastic IP.
	Description *string `pulumi:"description"`
	// The healthcheck probing interval in seconds (must be between `5` and `300`).
	HealthcheckInterval *int `pulumi:"healthcheckInterval"`
	// The healthcheck probing mode (must be `tcp`, `http` or `https`).
	HealthcheckMode *string `pulumi:"healthcheckMode"`
	// The healthcheck probe HTTP request path (must be specified in `http`/`https` modes).
	HealthcheckPath *string `pulumi:"healthcheckPath"`
	// The healthcheck service port to probe (must be between `1` and `65535`).
	HealthcheckPort *int `pulumi:"healthcheckPort"`
	// The number of unsuccessful healthcheck probes before considering the target unhealthy (must be between `1` and `20`).
	HealthcheckStrikesFail *int `pulumi:"healthcheckStrikesFail"`
	// The number of successful healthcheck probes before considering the target healthy (must be between `1` and `20`).
	HealthcheckStrikesOk *int `pulumi:"healthcheckStrikesOk"`
	// The time in seconds before considering a healthcheck probing failed (must be between `2` and `60`).
	HealthcheckTimeout *int `pulumi:"healthcheckTimeout"`
	// Disable TLS certificate validation in `https` mode. Note: this parameter can only be changed to `true`, it cannot be reset to `false` later on (requires a resource re-creation).
	HealthcheckTlsSkipVerify *bool `pulumi:"healthcheckTlsSkipVerify"`
	// The healthcheck TLS server name to specify in `https` mode. Note: this parameter can only be changed to a non-empty value, it cannot be reset to its default empty value later on (requires a resource re-creation).
	HealthcheckTlsSni *string `pulumi:"healthcheckTlsSni"`
	// A reverse DNS record to set for the Elastic IP.
	ReverseDns *string `pulumi:"reverseDns"`
	// A dictionary of tags (key/value). To remove all tags, set `tags = {}`.
	Tags map[string]string `pulumi:"tags"`
	// The name of the [zone][zone] to create the Elastic IP into.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a IPAddress resource.
type IPAddressArgs struct {
	// The description of the Elastic IP.
	Description pulumi.StringPtrInput
	// The healthcheck probing interval in seconds (must be between `5` and `300`).
	HealthcheckInterval pulumi.IntPtrInput
	// The healthcheck probing mode (must be `tcp`, `http` or `https`).
	HealthcheckMode pulumi.StringPtrInput
	// The healthcheck probe HTTP request path (must be specified in `http`/`https` modes).
	HealthcheckPath pulumi.StringPtrInput
	// The healthcheck service port to probe (must be between `1` and `65535`).
	HealthcheckPort pulumi.IntPtrInput
	// The number of unsuccessful healthcheck probes before considering the target unhealthy (must be between `1` and `20`).
	HealthcheckStrikesFail pulumi.IntPtrInput
	// The number of successful healthcheck probes before considering the target healthy (must be between `1` and `20`).
	HealthcheckStrikesOk pulumi.IntPtrInput
	// The time in seconds before considering a healthcheck probing failed (must be between `2` and `60`).
	HealthcheckTimeout pulumi.IntPtrInput
	// Disable TLS certificate validation in `https` mode. Note: this parameter can only be changed to `true`, it cannot be reset to `false` later on (requires a resource re-creation).
	HealthcheckTlsSkipVerify pulumi.BoolPtrInput
	// The healthcheck TLS server name to specify in `https` mode. Note: this parameter can only be changed to a non-empty value, it cannot be reset to its default empty value later on (requires a resource re-creation).
	HealthcheckTlsSni pulumi.StringPtrInput
	// A reverse DNS record to set for the Elastic IP.
	ReverseDns pulumi.StringPtrInput
	// A dictionary of tags (key/value). To remove all tags, set `tags = {}`.
	Tags pulumi.StringMapInput
	// The name of the [zone][zone] to create the Elastic IP into.
	Zone pulumi.StringInput
}

func (IPAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipaddressArgs)(nil)).Elem()
}

type IPAddressInput interface {
	pulumi.Input

	ToIPAddressOutput() IPAddressOutput
	ToIPAddressOutputWithContext(ctx context.Context) IPAddressOutput
}

func (*IPAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddress)(nil)).Elem()
}

func (i *IPAddress) ToIPAddressOutput() IPAddressOutput {
	return i.ToIPAddressOutputWithContext(context.Background())
}

func (i *IPAddress) ToIPAddressOutputWithContext(ctx context.Context) IPAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressOutput)
}

// IPAddressArrayInput is an input type that accepts IPAddressArray and IPAddressArrayOutput values.
// You can construct a concrete instance of `IPAddressArrayInput` via:
//
//          IPAddressArray{ IPAddressArgs{...} }
type IPAddressArrayInput interface {
	pulumi.Input

	ToIPAddressArrayOutput() IPAddressArrayOutput
	ToIPAddressArrayOutputWithContext(context.Context) IPAddressArrayOutput
}

type IPAddressArray []IPAddressInput

func (IPAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IPAddress)(nil)).Elem()
}

func (i IPAddressArray) ToIPAddressArrayOutput() IPAddressArrayOutput {
	return i.ToIPAddressArrayOutputWithContext(context.Background())
}

func (i IPAddressArray) ToIPAddressArrayOutputWithContext(ctx context.Context) IPAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressArrayOutput)
}

// IPAddressMapInput is an input type that accepts IPAddressMap and IPAddressMapOutput values.
// You can construct a concrete instance of `IPAddressMapInput` via:
//
//          IPAddressMap{ "key": IPAddressArgs{...} }
type IPAddressMapInput interface {
	pulumi.Input

	ToIPAddressMapOutput() IPAddressMapOutput
	ToIPAddressMapOutputWithContext(context.Context) IPAddressMapOutput
}

type IPAddressMap map[string]IPAddressInput

func (IPAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IPAddress)(nil)).Elem()
}

func (i IPAddressMap) ToIPAddressMapOutput() IPAddressMapOutput {
	return i.ToIPAddressMapOutputWithContext(context.Background())
}

func (i IPAddressMap) ToIPAddressMapOutputWithContext(ctx context.Context) IPAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressMapOutput)
}

type IPAddressOutput struct{ *pulumi.OutputState }

func (IPAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddress)(nil)).Elem()
}

func (o IPAddressOutput) ToIPAddressOutput() IPAddressOutput {
	return o
}

func (o IPAddressOutput) ToIPAddressOutputWithContext(ctx context.Context) IPAddressOutput {
	return o
}

type IPAddressArrayOutput struct{ *pulumi.OutputState }

func (IPAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IPAddress)(nil)).Elem()
}

func (o IPAddressArrayOutput) ToIPAddressArrayOutput() IPAddressArrayOutput {
	return o
}

func (o IPAddressArrayOutput) ToIPAddressArrayOutputWithContext(ctx context.Context) IPAddressArrayOutput {
	return o
}

func (o IPAddressArrayOutput) Index(i pulumi.IntInput) IPAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IPAddress {
		return vs[0].([]*IPAddress)[vs[1].(int)]
	}).(IPAddressOutput)
}

type IPAddressMapOutput struct{ *pulumi.OutputState }

func (IPAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IPAddress)(nil)).Elem()
}

func (o IPAddressMapOutput) ToIPAddressMapOutput() IPAddressMapOutput {
	return o
}

func (o IPAddressMapOutput) ToIPAddressMapOutputWithContext(ctx context.Context) IPAddressMapOutput {
	return o
}

func (o IPAddressMapOutput) MapIndex(k pulumi.StringInput) IPAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IPAddress {
		return vs[0].(map[string]*IPAddress)[vs[1].(string)]
	}).(IPAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressInput)(nil)).Elem(), &IPAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressArrayInput)(nil)).Elem(), IPAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressMapInput)(nil)).Elem(), IPAddressMap{})
	pulumi.RegisterOutputType(IPAddressOutput{})
	pulumi.RegisterOutputType(IPAddressArrayOutput{})
	pulumi.RegisterOutputType(IPAddressMapOutput{})
}
