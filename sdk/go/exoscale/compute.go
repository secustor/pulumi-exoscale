// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Exoscale [Compute instance][compute-doc] resource. This can be used to create, modify, and delete Compute instances.
//
// !> **WARNING:** This resource is deprecated and will be removed in the next major version.
//
// ## Import
//
// An existing Compute instance can be imported as a resource by name or IDconsole # By name
//
// ```sh
//  $ pulumi import exoscale:index/compute:Compute vm1 vm1
// ```
//
// # By ID
//
// ```sh
//  $ pulumi import exoscale:index/compute:Compute vm1 eb556678-ec59-4be6-8c54-0406ae0f6da6
// ```
//
//  [cloudinit]http://cloudinit.readthedocs.io/en/latest/ [compute-doc]https://community.exoscale.com/documentation/compute/ [d-compute_template]../d/compute_template.html [r-affinity]affinity.html [r-nic]nic.html [r-secondary_ipaddress]secondary_ipaddress.html [r-security_group]security_group.html [remote-exec]https://www.terraform.io/docs/provisioners/remote-exec.html [size]https://www.exoscale.com/pricing/#/compute/ [sshkeypair-doc]https://community.exoscale.com/documentation/compute/ssh-keypairs/ [template]https://www.exoscale.com/templates/ [zone]https://www.exoscale.com/datacenters/
type Compute struct {
	pulumi.CustomResourceState

	// A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only; conflicts with `affinityGroups`).
	AffinityGroupIds pulumi.StringArrayOutput `pulumi:"affinityGroupIds"`
	// A list of [Anti-Affinity Group][r-affinity] names (at creation time only; conflicts with `affinityGroupIds`).
	AffinityGroups pulumi.StringArrayOutput `pulumi:"affinityGroups"`
	// The Compute instance root disk size in GiB (at least `10`).
	DiskSize pulumi.IntOutput `pulumi:"diskSize"`
	// The displayed name of the Compute instance. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS' *hostname* during creation, so the value must contain only alphanumeric and hyphen ("-") characters; it can be changed to any character during a later update. If neither `displayName` or `hostname` attributes are set, a random value will be generated automatically server-side.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	Gateway     pulumi.StringOutput `pulumi:"gateway"`
	// The Compute instance hostname, must contain only alphanumeric and hyphen ("-") characters. If neither `displayName` or `hostname` attributes are set, a random value will be generated automatically server-side. Note: updating this attribute's value requires to reboot the instance.
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// Boolean controlling if IPv4 is enabled (only supported value is `true`).
	Ip4 pulumi.BoolPtrOutput `pulumi:"ip4"`
	// Boolean controlling if IPv6 is enabled.
	Ip6 pulumi.BoolPtrOutput `pulumi:"ip6"`
	// The IPv6 address of the Compute instance main network interface.
	Ip6Address pulumi.StringOutput `pulumi:"ip6Address"`
	Ip6Cidr    pulumi.StringOutput `pulumi:"ip6Cidr"`
	// The IP address of the Compute instance main network interface.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// The name of the [SSH key pair][sshkeypair-doc] to be installed.
	KeyPair pulumi.StringPtrOutput `pulumi:"keyPair"`
	// The keyboard layout configuration (at creation time only). Supported values are: `de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`.
	Keyboard pulumi.StringPtrOutput `pulumi:"keyboard"`
	// **Deprecated** The Compute instance *hostname*. Use the `hostname` attribute instead.
	//
	// Deprecated: use `hostname` attribute instead
	Name pulumi.StringOutput `pulumi:"name"`
	// The initial Compute instance password and/or encrypted password.
	Password pulumi.StringOutput `pulumi:"password"`
	// The reverse DNS record of the Compute instance (must end with a `.`, e.g: `my-server.example.net.`).
	ReverseDns pulumi.StringPtrOutput `pulumi:"reverseDns"`
	// A list of [Security Group][r-security_group] IDs (conflicts with `securityGroups`).
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// A list of [Security Group][r-security_group] names (conflicts with `securityGroupIds`).
	SecurityGroups pulumi.StringArrayOutput `pulumi:"securityGroups"`
	// The Compute instance [size][size], e.g. `Tiny`, `Small`, `Medium`, `Large` etc.
	Size pulumi.StringPtrOutput `pulumi:"size"`
	// The state of the Compute instance, e.g. `Running` or `Stopped`
	State pulumi.StringOutput `pulumi:"state"`
	// A dictionary of tags (key/value). To remove all tags, set `tags = {}`.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The name of the Compute instance [template][template]. Only *featured* templates are available, if you want to reference *custom templates* use the `templateId` attribute instead.
	Template pulumi.StringOutput `pulumi:"template"`
	// The ID of the Compute instance [template][template]. Usage of the [`computeTemplate`][d-compute_template] data source is recommended.
	TemplateId pulumi.StringOutput `pulumi:"templateId"`
	// A [cloud-init][cloudinit] configuration. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
	UserData pulumi.StringPtrOutput `pulumi:"userData"`
	// was the cloud-init configuration base64 encoded
	UserDataBase64 pulumi.BoolOutput `pulumi:"userDataBase64"`
	// The user to use to connect to the Compute instance with SSH. If you've referenced a *custom template* in the resource, use the [`computeTemplate`][d-compute_template] data source `username` attribute instead.
	//
	// Deprecated: broken, use `compute_template` data source `username` attribute
	Username pulumi.StringOutput `pulumi:"username"`
	// The name of the [zone][zone] to deploy the Compute instance into.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewCompute registers a new resource with the given unique name, arguments, and options.
func NewCompute(ctx *pulumi.Context,
	name string, args *ComputeArgs, opts ...pulumi.ResourceOption) (*Compute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DiskSize == nil {
		return nil, errors.New("invalid value for required argument 'DiskSize'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	var resource Compute
	err := ctx.RegisterResource("exoscale:index/compute:Compute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCompute gets an existing Compute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCompute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeState, opts ...pulumi.ResourceOption) (*Compute, error) {
	var resource Compute
	err := ctx.ReadResource("exoscale:index/compute:Compute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Compute resources.
type computeState struct {
	// A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only; conflicts with `affinityGroups`).
	AffinityGroupIds []string `pulumi:"affinityGroupIds"`
	// A list of [Anti-Affinity Group][r-affinity] names (at creation time only; conflicts with `affinityGroupIds`).
	AffinityGroups []string `pulumi:"affinityGroups"`
	// The Compute instance root disk size in GiB (at least `10`).
	DiskSize *int `pulumi:"diskSize"`
	// The displayed name of the Compute instance. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS' *hostname* during creation, so the value must contain only alphanumeric and hyphen ("-") characters; it can be changed to any character during a later update. If neither `displayName` or `hostname` attributes are set, a random value will be generated automatically server-side.
	DisplayName *string `pulumi:"displayName"`
	Gateway     *string `pulumi:"gateway"`
	// The Compute instance hostname, must contain only alphanumeric and hyphen ("-") characters. If neither `displayName` or `hostname` attributes are set, a random value will be generated automatically server-side. Note: updating this attribute's value requires to reboot the instance.
	Hostname *string `pulumi:"hostname"`
	// Boolean controlling if IPv4 is enabled (only supported value is `true`).
	Ip4 *bool `pulumi:"ip4"`
	// Boolean controlling if IPv6 is enabled.
	Ip6 *bool `pulumi:"ip6"`
	// The IPv6 address of the Compute instance main network interface.
	Ip6Address *string `pulumi:"ip6Address"`
	Ip6Cidr    *string `pulumi:"ip6Cidr"`
	// The IP address of the Compute instance main network interface.
	IpAddress *string `pulumi:"ipAddress"`
	// The name of the [SSH key pair][sshkeypair-doc] to be installed.
	KeyPair *string `pulumi:"keyPair"`
	// The keyboard layout configuration (at creation time only). Supported values are: `de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`.
	Keyboard *string `pulumi:"keyboard"`
	// **Deprecated** The Compute instance *hostname*. Use the `hostname` attribute instead.
	//
	// Deprecated: use `hostname` attribute instead
	Name *string `pulumi:"name"`
	// The initial Compute instance password and/or encrypted password.
	Password *string `pulumi:"password"`
	// The reverse DNS record of the Compute instance (must end with a `.`, e.g: `my-server.example.net.`).
	ReverseDns *string `pulumi:"reverseDns"`
	// A list of [Security Group][r-security_group] IDs (conflicts with `securityGroups`).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of [Security Group][r-security_group] names (conflicts with `securityGroupIds`).
	SecurityGroups []string `pulumi:"securityGroups"`
	// The Compute instance [size][size], e.g. `Tiny`, `Small`, `Medium`, `Large` etc.
	Size *string `pulumi:"size"`
	// The state of the Compute instance, e.g. `Running` or `Stopped`
	State *string `pulumi:"state"`
	// A dictionary of tags (key/value). To remove all tags, set `tags = {}`.
	Tags map[string]string `pulumi:"tags"`
	// The name of the Compute instance [template][template]. Only *featured* templates are available, if you want to reference *custom templates* use the `templateId` attribute instead.
	Template *string `pulumi:"template"`
	// The ID of the Compute instance [template][template]. Usage of the [`computeTemplate`][d-compute_template] data source is recommended.
	TemplateId *string `pulumi:"templateId"`
	// A [cloud-init][cloudinit] configuration. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
	UserData *string `pulumi:"userData"`
	// was the cloud-init configuration base64 encoded
	UserDataBase64 *bool `pulumi:"userDataBase64"`
	// The user to use to connect to the Compute instance with SSH. If you've referenced a *custom template* in the resource, use the [`computeTemplate`][d-compute_template] data source `username` attribute instead.
	//
	// Deprecated: broken, use `compute_template` data source `username` attribute
	Username *string `pulumi:"username"`
	// The name of the [zone][zone] to deploy the Compute instance into.
	Zone *string `pulumi:"zone"`
}

type ComputeState struct {
	// A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only; conflicts with `affinityGroups`).
	AffinityGroupIds pulumi.StringArrayInput
	// A list of [Anti-Affinity Group][r-affinity] names (at creation time only; conflicts with `affinityGroupIds`).
	AffinityGroups pulumi.StringArrayInput
	// The Compute instance root disk size in GiB (at least `10`).
	DiskSize pulumi.IntPtrInput
	// The displayed name of the Compute instance. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS' *hostname* during creation, so the value must contain only alphanumeric and hyphen ("-") characters; it can be changed to any character during a later update. If neither `displayName` or `hostname` attributes are set, a random value will be generated automatically server-side.
	DisplayName pulumi.StringPtrInput
	Gateway     pulumi.StringPtrInput
	// The Compute instance hostname, must contain only alphanumeric and hyphen ("-") characters. If neither `displayName` or `hostname` attributes are set, a random value will be generated automatically server-side. Note: updating this attribute's value requires to reboot the instance.
	Hostname pulumi.StringPtrInput
	// Boolean controlling if IPv4 is enabled (only supported value is `true`).
	Ip4 pulumi.BoolPtrInput
	// Boolean controlling if IPv6 is enabled.
	Ip6 pulumi.BoolPtrInput
	// The IPv6 address of the Compute instance main network interface.
	Ip6Address pulumi.StringPtrInput
	Ip6Cidr    pulumi.StringPtrInput
	// The IP address of the Compute instance main network interface.
	IpAddress pulumi.StringPtrInput
	// The name of the [SSH key pair][sshkeypair-doc] to be installed.
	KeyPair pulumi.StringPtrInput
	// The keyboard layout configuration (at creation time only). Supported values are: `de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`.
	Keyboard pulumi.StringPtrInput
	// **Deprecated** The Compute instance *hostname*. Use the `hostname` attribute instead.
	//
	// Deprecated: use `hostname` attribute instead
	Name pulumi.StringPtrInput
	// The initial Compute instance password and/or encrypted password.
	Password pulumi.StringPtrInput
	// The reverse DNS record of the Compute instance (must end with a `.`, e.g: `my-server.example.net.`).
	ReverseDns pulumi.StringPtrInput
	// A list of [Security Group][r-security_group] IDs (conflicts with `securityGroups`).
	SecurityGroupIds pulumi.StringArrayInput
	// A list of [Security Group][r-security_group] names (conflicts with `securityGroupIds`).
	SecurityGroups pulumi.StringArrayInput
	// The Compute instance [size][size], e.g. `Tiny`, `Small`, `Medium`, `Large` etc.
	Size pulumi.StringPtrInput
	// The state of the Compute instance, e.g. `Running` or `Stopped`
	State pulumi.StringPtrInput
	// A dictionary of tags (key/value). To remove all tags, set `tags = {}`.
	Tags pulumi.StringMapInput
	// The name of the Compute instance [template][template]. Only *featured* templates are available, if you want to reference *custom templates* use the `templateId` attribute instead.
	Template pulumi.StringPtrInput
	// The ID of the Compute instance [template][template]. Usage of the [`computeTemplate`][d-compute_template] data source is recommended.
	TemplateId pulumi.StringPtrInput
	// A [cloud-init][cloudinit] configuration. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
	UserData pulumi.StringPtrInput
	// was the cloud-init configuration base64 encoded
	UserDataBase64 pulumi.BoolPtrInput
	// The user to use to connect to the Compute instance with SSH. If you've referenced a *custom template* in the resource, use the [`computeTemplate`][d-compute_template] data source `username` attribute instead.
	//
	// Deprecated: broken, use `compute_template` data source `username` attribute
	Username pulumi.StringPtrInput
	// The name of the [zone][zone] to deploy the Compute instance into.
	Zone pulumi.StringPtrInput
}

func (ComputeState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeState)(nil)).Elem()
}

type computeArgs struct {
	// A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only; conflicts with `affinityGroups`).
	AffinityGroupIds []string `pulumi:"affinityGroupIds"`
	// A list of [Anti-Affinity Group][r-affinity] names (at creation time only; conflicts with `affinityGroupIds`).
	AffinityGroups []string `pulumi:"affinityGroups"`
	// The Compute instance root disk size in GiB (at least `10`).
	DiskSize int `pulumi:"diskSize"`
	// The displayed name of the Compute instance. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS' *hostname* during creation, so the value must contain only alphanumeric and hyphen ("-") characters; it can be changed to any character during a later update. If neither `displayName` or `hostname` attributes are set, a random value will be generated automatically server-side.
	DisplayName *string `pulumi:"displayName"`
	// The Compute instance hostname, must contain only alphanumeric and hyphen ("-") characters. If neither `displayName` or `hostname` attributes are set, a random value will be generated automatically server-side. Note: updating this attribute's value requires to reboot the instance.
	Hostname *string `pulumi:"hostname"`
	// Boolean controlling if IPv4 is enabled (only supported value is `true`).
	Ip4 *bool `pulumi:"ip4"`
	// Boolean controlling if IPv6 is enabled.
	Ip6 *bool `pulumi:"ip6"`
	// The name of the [SSH key pair][sshkeypair-doc] to be installed.
	KeyPair *string `pulumi:"keyPair"`
	// The keyboard layout configuration (at creation time only). Supported values are: `de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`.
	Keyboard *string `pulumi:"keyboard"`
	// The reverse DNS record of the Compute instance (must end with a `.`, e.g: `my-server.example.net.`).
	ReverseDns *string `pulumi:"reverseDns"`
	// A list of [Security Group][r-security_group] IDs (conflicts with `securityGroups`).
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of [Security Group][r-security_group] names (conflicts with `securityGroupIds`).
	SecurityGroups []string `pulumi:"securityGroups"`
	// The Compute instance [size][size], e.g. `Tiny`, `Small`, `Medium`, `Large` etc.
	Size *string `pulumi:"size"`
	// The state of the Compute instance, e.g. `Running` or `Stopped`
	State *string `pulumi:"state"`
	// A dictionary of tags (key/value). To remove all tags, set `tags = {}`.
	Tags map[string]string `pulumi:"tags"`
	// The name of the Compute instance [template][template]. Only *featured* templates are available, if you want to reference *custom templates* use the `templateId` attribute instead.
	Template *string `pulumi:"template"`
	// The ID of the Compute instance [template][template]. Usage of the [`computeTemplate`][d-compute_template] data source is recommended.
	TemplateId *string `pulumi:"templateId"`
	// A [cloud-init][cloudinit] configuration. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
	UserData *string `pulumi:"userData"`
	// The name of the [zone][zone] to deploy the Compute instance into.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a Compute resource.
type ComputeArgs struct {
	// A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only; conflicts with `affinityGroups`).
	AffinityGroupIds pulumi.StringArrayInput
	// A list of [Anti-Affinity Group][r-affinity] names (at creation time only; conflicts with `affinityGroupIds`).
	AffinityGroups pulumi.StringArrayInput
	// The Compute instance root disk size in GiB (at least `10`).
	DiskSize pulumi.IntInput
	// The displayed name of the Compute instance. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS' *hostname* during creation, so the value must contain only alphanumeric and hyphen ("-") characters; it can be changed to any character during a later update. If neither `displayName` or `hostname` attributes are set, a random value will be generated automatically server-side.
	DisplayName pulumi.StringPtrInput
	// The Compute instance hostname, must contain only alphanumeric and hyphen ("-") characters. If neither `displayName` or `hostname` attributes are set, a random value will be generated automatically server-side. Note: updating this attribute's value requires to reboot the instance.
	Hostname pulumi.StringPtrInput
	// Boolean controlling if IPv4 is enabled (only supported value is `true`).
	Ip4 pulumi.BoolPtrInput
	// Boolean controlling if IPv6 is enabled.
	Ip6 pulumi.BoolPtrInput
	// The name of the [SSH key pair][sshkeypair-doc] to be installed.
	KeyPair pulumi.StringPtrInput
	// The keyboard layout configuration (at creation time only). Supported values are: `de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`.
	Keyboard pulumi.StringPtrInput
	// The reverse DNS record of the Compute instance (must end with a `.`, e.g: `my-server.example.net.`).
	ReverseDns pulumi.StringPtrInput
	// A list of [Security Group][r-security_group] IDs (conflicts with `securityGroups`).
	SecurityGroupIds pulumi.StringArrayInput
	// A list of [Security Group][r-security_group] names (conflicts with `securityGroupIds`).
	SecurityGroups pulumi.StringArrayInput
	// The Compute instance [size][size], e.g. `Tiny`, `Small`, `Medium`, `Large` etc.
	Size pulumi.StringPtrInput
	// The state of the Compute instance, e.g. `Running` or `Stopped`
	State pulumi.StringPtrInput
	// A dictionary of tags (key/value). To remove all tags, set `tags = {}`.
	Tags pulumi.StringMapInput
	// The name of the Compute instance [template][template]. Only *featured* templates are available, if you want to reference *custom templates* use the `templateId` attribute instead.
	Template pulumi.StringPtrInput
	// The ID of the Compute instance [template][template]. Usage of the [`computeTemplate`][d-compute_template] data source is recommended.
	TemplateId pulumi.StringPtrInput
	// A [cloud-init][cloudinit] configuration. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
	UserData pulumi.StringPtrInput
	// The name of the [zone][zone] to deploy the Compute instance into.
	Zone pulumi.StringInput
}

func (ComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeArgs)(nil)).Elem()
}

type ComputeInput interface {
	pulumi.Input

	ToComputeOutput() ComputeOutput
	ToComputeOutputWithContext(ctx context.Context) ComputeOutput
}

func (*Compute) ElementType() reflect.Type {
	return reflect.TypeOf((**Compute)(nil)).Elem()
}

func (i *Compute) ToComputeOutput() ComputeOutput {
	return i.ToComputeOutputWithContext(context.Background())
}

func (i *Compute) ToComputeOutputWithContext(ctx context.Context) ComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeOutput)
}

// ComputeArrayInput is an input type that accepts ComputeArray and ComputeArrayOutput values.
// You can construct a concrete instance of `ComputeArrayInput` via:
//
//          ComputeArray{ ComputeArgs{...} }
type ComputeArrayInput interface {
	pulumi.Input

	ToComputeArrayOutput() ComputeArrayOutput
	ToComputeArrayOutputWithContext(context.Context) ComputeArrayOutput
}

type ComputeArray []ComputeInput

func (ComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Compute)(nil)).Elem()
}

func (i ComputeArray) ToComputeArrayOutput() ComputeArrayOutput {
	return i.ToComputeArrayOutputWithContext(context.Background())
}

func (i ComputeArray) ToComputeArrayOutputWithContext(ctx context.Context) ComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeArrayOutput)
}

// ComputeMapInput is an input type that accepts ComputeMap and ComputeMapOutput values.
// You can construct a concrete instance of `ComputeMapInput` via:
//
//          ComputeMap{ "key": ComputeArgs{...} }
type ComputeMapInput interface {
	pulumi.Input

	ToComputeMapOutput() ComputeMapOutput
	ToComputeMapOutputWithContext(context.Context) ComputeMapOutput
}

type ComputeMap map[string]ComputeInput

func (ComputeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Compute)(nil)).Elem()
}

func (i ComputeMap) ToComputeMapOutput() ComputeMapOutput {
	return i.ToComputeMapOutputWithContext(context.Background())
}

func (i ComputeMap) ToComputeMapOutputWithContext(ctx context.Context) ComputeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeMapOutput)
}

type ComputeOutput struct{ *pulumi.OutputState }

func (ComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Compute)(nil)).Elem()
}

func (o ComputeOutput) ToComputeOutput() ComputeOutput {
	return o
}

func (o ComputeOutput) ToComputeOutputWithContext(ctx context.Context) ComputeOutput {
	return o
}

type ComputeArrayOutput struct{ *pulumi.OutputState }

func (ComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Compute)(nil)).Elem()
}

func (o ComputeArrayOutput) ToComputeArrayOutput() ComputeArrayOutput {
	return o
}

func (o ComputeArrayOutput) ToComputeArrayOutputWithContext(ctx context.Context) ComputeArrayOutput {
	return o
}

func (o ComputeArrayOutput) Index(i pulumi.IntInput) ComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Compute {
		return vs[0].([]*Compute)[vs[1].(int)]
	}).(ComputeOutput)
}

type ComputeMapOutput struct{ *pulumi.OutputState }

func (ComputeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Compute)(nil)).Elem()
}

func (o ComputeMapOutput) ToComputeMapOutput() ComputeMapOutput {
	return o
}

func (o ComputeMapOutput) ToComputeMapOutputWithContext(ctx context.Context) ComputeMapOutput {
	return o
}

func (o ComputeMapOutput) MapIndex(k pulumi.StringInput) ComputeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Compute {
		return vs[0].(map[string]*Compute)[vs[1].(string)]
	}).(ComputeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInput)(nil)).Elem(), &Compute{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeArrayInput)(nil)).Elem(), ComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeMapInput)(nil)).Elem(), ComputeMap{})
	pulumi.RegisterOutputType(ComputeOutput{})
	pulumi.RegisterOutputType(ComputeArrayOutput{})
	pulumi.RegisterOutputType(ComputeMapOutput{})
}
