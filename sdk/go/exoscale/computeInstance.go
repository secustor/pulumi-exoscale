// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Exoscale [Compute instance][compute-doc] resource. This can be used to create, modify, and delete Compute instances.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-exoscale/sdk/go/exoscale"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		zone := "ch-gva-2"
// 		opt0 := "Linux Ubuntu 20.04 LTS 64-bit"
// 		ubuntu, err := exoscale.GetComputeTemplate(ctx, &GetComputeTemplateArgs{
// 			Zone: zone,
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		web, err := exoscale.NewSecurityGroup(ctx, "web", nil)
// 		if err != nil {
// 			return err
// 		}
// 		opt1 := "default"
// 		_default, err := exoscale.LookupSecurityGroup(ctx, &GetSecurityGroupArgs{
// 			Name: &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = exoscale.NewComputeInstance(ctx, "example", &exoscale.ComputeInstanceArgs{
// 			Zone:       pulumi.String(zone),
// 			Type:       pulumi.String("standard.medium"),
// 			TemplateId: pulumi.String(ubuntu.Id),
// 			DiskSize:   pulumi.Int(10),
// 			SecurityGroupIds: pulumi.StringArray{
// 				pulumi.String(_default.Id),
// 				web.ID(),
// 			},
// 			SshKey:   pulumi.String("my-key"),
// 			UserData: pulumi.String(fmt.Sprintf("%v%v", "#cloud-config\n", "manage_etc_hosts: localhost\n")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// An existing Compute instance can be imported as a resource by `<ID>@<ZONE>`console
//
// ```sh
//  $ pulumi import exoscale:index/computeInstance:ComputeInstance my-instance eb556678-ec59-4be6-8c54-0406ae0f6da6@ch-gva-2
// ```
//
//  [cloudinit]http://cloudinit.readthedocs.io/en/latest/ [compute-doc]https://community.exoscale.com/documentation/compute/ [d-anti_affinity_group]../d/anti_affinity_group.html [d-compute_template]../d/compute_template.html [d-elastic_ip]../d/elastic_ip.html [d-private_network]../d/private_network.html [d-security_group]../d/security_group.html [r-anti_affinity_group]anti_affinity_group.html [r-elastic_ip]../r/elastic_ip.html [r-private_network]../r/private_network.html [r-security_group]security_group.html [remote-exec]https://www.terraform.io/docs/provisioners/remote-exec.html [sshkeypair-doc]https://community.exoscale.com/documentation/compute/ssh-keypairs/ [template]https://www.exoscale.com/templates/ [type]https://www.exoscale.com/pricing/#/compute/ [zone]https://www.exoscale.com/datacenters/
type ComputeInstance struct {
	pulumi.CustomResourceState

	// A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
	AntiAffinityGroupIds pulumi.StringArrayOutput `pulumi:"antiAffinityGroupIds"`
	// The creation date of the Compute instance.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A Deploy Target ID.
	DeployTargetId pulumi.StringPtrOutput `pulumi:"deployTargetId"`
	// The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
	DiskSize pulumi.IntOutput `pulumi:"diskSize"`
	// A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
	ElasticIpIds pulumi.StringArrayOutput `pulumi:"elasticIpIds"`
	// Enable IPv6 on the Compute instance (default: `false`).
	Ipv6 pulumi.BoolPtrOutput `pulumi:"ipv6"`
	// The IPv6 address of the Compute instance main network interface.
	Ipv6Address pulumi.StringOutput `pulumi:"ipv6Address"`
	// A map of key/value labels.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The name of the Compute instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
	PrivateNetworkIds pulumi.StringArrayOutput `pulumi:"privateNetworkIds"`
	// The IPv4 address of the Compute instance's main network interface.
	PublicIpAddress pulumi.StringOutput `pulumi:"publicIpAddress"`
	// A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
	SshKey pulumi.StringPtrOutput `pulumi:"sshKey"`
	// The state of the Compute instance (supported values: `started`, `stopped`).
	State pulumi.StringOutput `pulumi:"state"`
	// The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`getComputeTemplate`][d-compute_template] data source is recommended.
	TemplateId pulumi.StringOutput `pulumi:"templateId"`
	// The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
	Type pulumi.StringOutput `pulumi:"type"`
	// A [cloud-init][cloudinit] configuration.
	UserData pulumi.StringPtrOutput `pulumi:"userData"`
	// The name of the [zone][zone] to deploy the Compute instance into.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewComputeInstance registers a new resource with the given unique name, arguments, and options.
func NewComputeInstance(ctx *pulumi.Context,
	name string, args *ComputeInstanceArgs, opts ...pulumi.ResourceOption) (*ComputeInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TemplateId == nil {
		return nil, errors.New("invalid value for required argument 'TemplateId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	var resource ComputeInstance
	err := ctx.RegisterResource("exoscale:index/computeInstance:ComputeInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeInstance gets an existing ComputeInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeInstanceState, opts ...pulumi.ResourceOption) (*ComputeInstance, error) {
	var resource ComputeInstance
	err := ctx.ReadResource("exoscale:index/computeInstance:ComputeInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeInstance resources.
type computeInstanceState struct {
	// A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
	AntiAffinityGroupIds []string `pulumi:"antiAffinityGroupIds"`
	// The creation date of the Compute instance.
	CreatedAt *string `pulumi:"createdAt"`
	// A Deploy Target ID.
	DeployTargetId *string `pulumi:"deployTargetId"`
	// The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
	DiskSize *int `pulumi:"diskSize"`
	// A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
	ElasticIpIds []string `pulumi:"elasticIpIds"`
	// Enable IPv6 on the Compute instance (default: `false`).
	Ipv6 *bool `pulumi:"ipv6"`
	// The IPv6 address of the Compute instance main network interface.
	Ipv6Address *string `pulumi:"ipv6Address"`
	// A map of key/value labels.
	Labels map[string]string `pulumi:"labels"`
	// The name of the Compute instance.
	Name *string `pulumi:"name"`
	// A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
	PrivateNetworkIds []string `pulumi:"privateNetworkIds"`
	// The IPv4 address of the Compute instance's main network interface.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
	// A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
	SshKey *string `pulumi:"sshKey"`
	// The state of the Compute instance (supported values: `started`, `stopped`).
	State *string `pulumi:"state"`
	// The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`getComputeTemplate`][d-compute_template] data source is recommended.
	TemplateId *string `pulumi:"templateId"`
	// The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
	Type *string `pulumi:"type"`
	// A [cloud-init][cloudinit] configuration.
	UserData *string `pulumi:"userData"`
	// The name of the [zone][zone] to deploy the Compute instance into.
	Zone *string `pulumi:"zone"`
}

type ComputeInstanceState struct {
	// A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
	AntiAffinityGroupIds pulumi.StringArrayInput
	// The creation date of the Compute instance.
	CreatedAt pulumi.StringPtrInput
	// A Deploy Target ID.
	DeployTargetId pulumi.StringPtrInput
	// The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
	DiskSize pulumi.IntPtrInput
	// A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
	ElasticIpIds pulumi.StringArrayInput
	// Enable IPv6 on the Compute instance (default: `false`).
	Ipv6 pulumi.BoolPtrInput
	// The IPv6 address of the Compute instance main network interface.
	Ipv6Address pulumi.StringPtrInput
	// A map of key/value labels.
	Labels pulumi.StringMapInput
	// The name of the Compute instance.
	Name pulumi.StringPtrInput
	// A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
	PrivateNetworkIds pulumi.StringArrayInput
	// The IPv4 address of the Compute instance's main network interface.
	PublicIpAddress pulumi.StringPtrInput
	// A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
	SecurityGroupIds pulumi.StringArrayInput
	// The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
	SshKey pulumi.StringPtrInput
	// The state of the Compute instance (supported values: `started`, `stopped`).
	State pulumi.StringPtrInput
	// The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`getComputeTemplate`][d-compute_template] data source is recommended.
	TemplateId pulumi.StringPtrInput
	// The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
	Type pulumi.StringPtrInput
	// A [cloud-init][cloudinit] configuration.
	UserData pulumi.StringPtrInput
	// The name of the [zone][zone] to deploy the Compute instance into.
	Zone pulumi.StringPtrInput
}

func (ComputeInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceState)(nil)).Elem()
}

type computeInstanceArgs struct {
	// A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
	AntiAffinityGroupIds []string `pulumi:"antiAffinityGroupIds"`
	// A Deploy Target ID.
	DeployTargetId *string `pulumi:"deployTargetId"`
	// The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
	DiskSize *int `pulumi:"diskSize"`
	// A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
	ElasticIpIds []string `pulumi:"elasticIpIds"`
	// Enable IPv6 on the Compute instance (default: `false`).
	Ipv6 *bool `pulumi:"ipv6"`
	// A map of key/value labels.
	Labels map[string]string `pulumi:"labels"`
	// The name of the Compute instance.
	Name *string `pulumi:"name"`
	// A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
	PrivateNetworkIds []string `pulumi:"privateNetworkIds"`
	// A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
	SshKey *string `pulumi:"sshKey"`
	// The state of the Compute instance (supported values: `started`, `stopped`).
	State *string `pulumi:"state"`
	// The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`getComputeTemplate`][d-compute_template] data source is recommended.
	TemplateId string `pulumi:"templateId"`
	// The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
	Type string `pulumi:"type"`
	// A [cloud-init][cloudinit] configuration.
	UserData *string `pulumi:"userData"`
	// The name of the [zone][zone] to deploy the Compute instance into.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a ComputeInstance resource.
type ComputeInstanceArgs struct {
	// A list of [Anti-Affinity Group][r-anti_affinity_group] IDs (at creation time only) to assign the Compute instance. Usage of the [`AntiAffinityGroup`][d-anti_affinity_group] data source is recommended.
	AntiAffinityGroupIds pulumi.StringArrayInput
	// A Deploy Target ID.
	DeployTargetId pulumi.StringPtrInput
	// The Compute instance disk size in GiB (at least `10`). **WARNING**: updating this attribute stops/restarts the Compute instance.
	DiskSize pulumi.IntPtrInput
	// A list of [Elastic IP][r-elastic_ip] IDs to attach to the Compute instance. Usage of the [`ElasticIP`][d-elastic_ip] data source is recommended.
	ElasticIpIds pulumi.StringArrayInput
	// Enable IPv6 on the Compute instance (default: `false`).
	Ipv6 pulumi.BoolPtrInput
	// A map of key/value labels.
	Labels pulumi.StringMapInput
	// The name of the Compute instance.
	Name pulumi.StringPtrInput
	// A list of [Private Network][r-private_network] IDs to attach to the Compute instance. Usage of the [`PrivateNetwork`][d-private_network] data source is recommended.
	PrivateNetworkIds pulumi.StringArrayInput
	// A list of [Security Group][r-security_group] IDs to attach to the Compute instance. Usage of the [`SecurityGroup`][d-security_group] data source is recommended.
	SecurityGroupIds pulumi.StringArrayInput
	// The name of the [SSH key pair][sshkeypair] to install to the Compute instance's user account during creation.
	SshKey pulumi.StringPtrInput
	// The state of the Compute instance (supported values: `started`, `stopped`).
	State pulumi.StringPtrInput
	// The ID of the instance [template][template] to use when creating the Compute instance. Usage of the [`getComputeTemplate`][d-compute_template] data source is recommended.
	TemplateId pulumi.StringInput
	// The Compute instance [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).  **WARNING**: updating this attribute stops/restarts the Compute instance.
	Type pulumi.StringInput
	// A [cloud-init][cloudinit] configuration.
	UserData pulumi.StringPtrInput
	// The name of the [zone][zone] to deploy the Compute instance into.
	Zone pulumi.StringInput
}

func (ComputeInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceArgs)(nil)).Elem()
}

type ComputeInstanceInput interface {
	pulumi.Input

	ToComputeInstanceOutput() ComputeInstanceOutput
	ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput
}

func (*ComputeInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstance)(nil)).Elem()
}

func (i *ComputeInstance) ToComputeInstanceOutput() ComputeInstanceOutput {
	return i.ToComputeInstanceOutputWithContext(context.Background())
}

func (i *ComputeInstance) ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceOutput)
}

// ComputeInstanceArrayInput is an input type that accepts ComputeInstanceArray and ComputeInstanceArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceArrayInput` via:
//
//          ComputeInstanceArray{ ComputeInstanceArgs{...} }
type ComputeInstanceArrayInput interface {
	pulumi.Input

	ToComputeInstanceArrayOutput() ComputeInstanceArrayOutput
	ToComputeInstanceArrayOutputWithContext(context.Context) ComputeInstanceArrayOutput
}

type ComputeInstanceArray []ComputeInstanceInput

func (ComputeInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeInstance)(nil)).Elem()
}

func (i ComputeInstanceArray) ToComputeInstanceArrayOutput() ComputeInstanceArrayOutput {
	return i.ToComputeInstanceArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceArray) ToComputeInstanceArrayOutputWithContext(ctx context.Context) ComputeInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceArrayOutput)
}

// ComputeInstanceMapInput is an input type that accepts ComputeInstanceMap and ComputeInstanceMapOutput values.
// You can construct a concrete instance of `ComputeInstanceMapInput` via:
//
//          ComputeInstanceMap{ "key": ComputeInstanceArgs{...} }
type ComputeInstanceMapInput interface {
	pulumi.Input

	ToComputeInstanceMapOutput() ComputeInstanceMapOutput
	ToComputeInstanceMapOutputWithContext(context.Context) ComputeInstanceMapOutput
}

type ComputeInstanceMap map[string]ComputeInstanceInput

func (ComputeInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeInstance)(nil)).Elem()
}

func (i ComputeInstanceMap) ToComputeInstanceMapOutput() ComputeInstanceMapOutput {
	return i.ToComputeInstanceMapOutputWithContext(context.Background())
}

func (i ComputeInstanceMap) ToComputeInstanceMapOutputWithContext(ctx context.Context) ComputeInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceMapOutput)
}

type ComputeInstanceOutput struct{ *pulumi.OutputState }

func (ComputeInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceOutput) ToComputeInstanceOutput() ComputeInstanceOutput {
	return o
}

func (o ComputeInstanceOutput) ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput {
	return o
}

type ComputeInstanceArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceArrayOutput) ToComputeInstanceArrayOutput() ComputeInstanceArrayOutput {
	return o
}

func (o ComputeInstanceArrayOutput) ToComputeInstanceArrayOutputWithContext(ctx context.Context) ComputeInstanceArrayOutput {
	return o
}

func (o ComputeInstanceArrayOutput) Index(i pulumi.IntInput) ComputeInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComputeInstance {
		return vs[0].([]*ComputeInstance)[vs[1].(int)]
	}).(ComputeInstanceOutput)
}

type ComputeInstanceMapOutput struct{ *pulumi.OutputState }

func (ComputeInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceMapOutput) ToComputeInstanceMapOutput() ComputeInstanceMapOutput {
	return o
}

func (o ComputeInstanceMapOutput) ToComputeInstanceMapOutputWithContext(ctx context.Context) ComputeInstanceMapOutput {
	return o
}

func (o ComputeInstanceMapOutput) MapIndex(k pulumi.StringInput) ComputeInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComputeInstance {
		return vs[0].(map[string]*ComputeInstance)[vs[1].(string)]
	}).(ComputeInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceInput)(nil)).Elem(), &ComputeInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceArrayInput)(nil)).Elem(), ComputeInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceMapInput)(nil)).Elem(), ComputeInstanceMap{})
	pulumi.RegisterOutputType(ComputeInstanceOutput{})
	pulumi.RegisterOutputType(ComputeInstanceArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceMapOutput{})
}
