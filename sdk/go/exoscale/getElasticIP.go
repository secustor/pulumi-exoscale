// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package exoscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information on an [Elastic IP][eip-doc].
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-exoscale/sdk/go/exoscale"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		zone := "ch-gva-2"
// 		opt0 := "1.2.3.4"
// 		vip, err := exoscale.LookupElasticIP(ctx, &GetElasticIPArgs{
// 			Zone:      zone,
// 			IpAddress: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		opt1 := "Linux Ubuntu 20.04 LTS 64-bit"
// 		ubuntu, err := exoscale.GetComputeTemplate(ctx, &GetComputeTemplateArgs{
// 			Zone: zone,
// 			Name: &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = exoscale.NewComputeInstance(ctx, "example", &exoscale.ComputeInstanceArgs{
// 			Zone:       pulumi.String(zone),
// 			Type:       pulumi.String("standard.medium"),
// 			TemplateId: pulumi.String(ubuntu.Id),
// 			ElasticIpIds: pulumi.StringArray{
// 				pulumi.String(vip.Id),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupElasticIP(ctx *pulumi.Context, args *LookupElasticIPArgs, opts ...pulumi.InvokeOption) (*LookupElasticIPResult, error) {
	var rv LookupElasticIPResult
	err := ctx.Invoke("exoscale:index/getElasticIP:getElasticIP", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getElasticIP.
type LookupElasticIPArgs struct {
	// The ID of the Elastic IP (conflicts with `ipAddress`).
	Id *string `pulumi:"id"`
	// The IP address of the Elastic IP (conflicts with `id`).
	IpAddress *string `pulumi:"ipAddress"`
	// The [zone][zone] of the Elastic IP.
	Zone string `pulumi:"zone"`
}

// A collection of values returned by getElasticIP.
type LookupElasticIPResult struct {
	// The description of the Elastic IP.
	Description string `pulumi:"description"`
	// A health checking configuration for managed Elastic IPs. Structure is documented below.
	Healthchecks []GetElasticIPHealthcheck `pulumi:"healthchecks"`
	Id           *string                   `pulumi:"id"`
	IpAddress    *string                   `pulumi:"ipAddress"`
	Zone         string                    `pulumi:"zone"`
}

func LookupElasticIPOutput(ctx *pulumi.Context, args LookupElasticIPOutputArgs, opts ...pulumi.InvokeOption) LookupElasticIPResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupElasticIPResult, error) {
			args := v.(LookupElasticIPArgs)
			r, err := LookupElasticIP(ctx, &args, opts...)
			return *r, err
		}).(LookupElasticIPResultOutput)
}

// A collection of arguments for invoking getElasticIP.
type LookupElasticIPOutputArgs struct {
	// The ID of the Elastic IP (conflicts with `ipAddress`).
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IP address of the Elastic IP (conflicts with `id`).
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The [zone][zone] of the Elastic IP.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (LookupElasticIPOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupElasticIPArgs)(nil)).Elem()
}

// A collection of values returned by getElasticIP.
type LookupElasticIPResultOutput struct{ *pulumi.OutputState }

func (LookupElasticIPResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupElasticIPResult)(nil)).Elem()
}

func (o LookupElasticIPResultOutput) ToLookupElasticIPResultOutput() LookupElasticIPResultOutput {
	return o
}

func (o LookupElasticIPResultOutput) ToLookupElasticIPResultOutputWithContext(ctx context.Context) LookupElasticIPResultOutput {
	return o
}

// The description of the Elastic IP.
func (o LookupElasticIPResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupElasticIPResult) string { return v.Description }).(pulumi.StringOutput)
}

// A health checking configuration for managed Elastic IPs. Structure is documented below.
func (o LookupElasticIPResultOutput) Healthchecks() GetElasticIPHealthcheckArrayOutput {
	return o.ApplyT(func(v LookupElasticIPResult) []GetElasticIPHealthcheck { return v.Healthchecks }).(GetElasticIPHealthcheckArrayOutput)
}

func (o LookupElasticIPResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupElasticIPResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupElasticIPResultOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupElasticIPResult) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o LookupElasticIPResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupElasticIPResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupElasticIPResultOutput{})
}
