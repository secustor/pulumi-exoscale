// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Exoscale
{
    /// <summary>
    /// Provides an Exoscale Instance Pool resource. This can be used to create, modify, and delete Instance Pools.
    /// 
    /// ## Import
    /// 
    /// An existing Instance Pool can be imported as a resource by `&lt;ID&gt;@&lt;ZONE&gt;`console
    /// 
    /// ```sh
    ///  $ pulumi import exoscale:index/instancePool:InstancePool example eb556678-ec59-4be6-8c54-0406ae0f6da6@de-fra-1
    /// ```
    /// 
    ///  [cloudinit]http://cloudinit.readthedocs.io/en/latest/ [d-compute_template]../d/compute_template.html [eip-doc]https://community.exoscale.com/documentation/compute/eip/ [privnet-doc]https://community.exoscale.com/documentation/compute/private-networks/ [r-affinity]affinity.html [r-security_group]security_group.html [sshkeypair]https://community.exoscale.com/documentation/compute/ssh-keypairs/ [template]https://www.exoscale.com/templates/ [type]https://www.exoscale.com/pricing/#/compute/ [zone]https://www.exoscale.com/datacenters/
    /// </summary>
    [ExoscaleResourceType("exoscale:index/instancePool:InstancePool")]
    public partial class InstancePool : Pulumi.CustomResource
    {
        /// <summary>
        /// A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only).
        /// </summary>
        [Output("affinityGroupIds")]
        public Output<ImmutableArray<string>> AffinityGroupIds { get; private set; } = null!;

        /// <summary>
        /// A Deploy Target ID.
        /// </summary>
        [Output("deployTargetId")]
        public Output<string?> DeployTargetId { get; private set; } = null!;

        /// <summary>
        /// The description of the Instance Pool.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The managed Compute instances disk size.
        /// </summary>
        [Output("diskSize")]
        public Output<int> DiskSize { get; private set; } = null!;

        /// <summary>
        /// A list of [Elastic IP][eip-doc] IDs.
        /// </summary>
        [Output("elasticIpIds")]
        public Output<ImmutableArray<string>> ElasticIpIds { get; private set; } = null!;

        /// <summary>
        /// The string to add as prefix to managed Compute instances name (default: `pool`).
        /// </summary>
        [Output("instancePrefix")]
        public Output<string?> InstancePrefix { get; private set; } = null!;

        /// <summary>
        /// The managed Compute instances [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).
        /// </summary>
        [Output("instanceType")]
        public Output<string> InstanceType { get; private set; } = null!;

        /// <summary>
        /// Enable IPv6 on managed Compute instances (default: `false`).
        /// </summary>
        [Output("ipv6")]
        public Output<bool?> Ipv6 { get; private set; } = null!;

        /// <summary>
        /// The name of the [SSH key pair][sshkeypair] to install when creating Compute instances.
        /// </summary>
        [Output("keyPair")]
        public Output<string?> KeyPair { get; private set; } = null!;

        /// <summary>
        /// A map of key/value labels.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The name of the Instance Pool.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of [Private Network][privnet-doc] IDs.
        /// </summary>
        [Output("networkIds")]
        public Output<ImmutableArray<string>> NetworkIds { get; private set; } = null!;

        /// <summary>
        /// A list of [Security Group][r-security_group] IDs (at creation time only).
        /// </summary>
        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        /// <summary>
        /// **Deprecated** The managed Compute instances size. Replaced by `instance_type`.
        /// </summary>
        [Output("serviceOffering")]
        public Output<string> ServiceOffering { get; private set; } = null!;

        /// <summary>
        /// The number of Compute instance members the Instance Pool manages.
        /// </summary>
        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The ID of the instance [template][template] to use when creating Compute instances. Usage of the [`compute_template`][d-compute_template] data source is recommended.
        /// </summary>
        [Output("templateId")]
        public Output<string> TemplateId { get; private set; } = null!;

        /// <summary>
        /// A [cloud-init][cloudinit] configuration to apply when creating Compute instances. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
        /// </summary>
        [Output("userData")]
        public Output<string?> UserData { get; private set; } = null!;

        /// <summary>
        /// The list of Instance Pool members (Compute instance IDs).
        /// </summary>
        [Output("virtualMachines")]
        public Output<ImmutableArray<string>> VirtualMachines { get; private set; } = null!;

        /// <summary>
        /// The name of the [zone][zone] to deploy the Instance Pool into.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a InstancePool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstancePool(string name, InstancePoolArgs args, CustomResourceOptions? options = null)
            : base("exoscale:index/instancePool:InstancePool", name, args ?? new InstancePoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstancePool(string name, Input<string> id, InstancePoolState? state = null, CustomResourceOptions? options = null)
            : base("exoscale:index/instancePool:InstancePool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstancePool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstancePool Get(string name, Input<string> id, InstancePoolState? state = null, CustomResourceOptions? options = null)
        {
            return new InstancePool(name, id, state, options);
        }
    }

    public sealed class InstancePoolArgs : Pulumi.ResourceArgs
    {
        [Input("affinityGroupIds")]
        private InputList<string>? _affinityGroupIds;

        /// <summary>
        /// A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only).
        /// </summary>
        public InputList<string> AffinityGroupIds
        {
            get => _affinityGroupIds ?? (_affinityGroupIds = new InputList<string>());
            set => _affinityGroupIds = value;
        }

        /// <summary>
        /// A Deploy Target ID.
        /// </summary>
        [Input("deployTargetId")]
        public Input<string>? DeployTargetId { get; set; }

        /// <summary>
        /// The description of the Instance Pool.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The managed Compute instances disk size.
        /// </summary>
        [Input("diskSize")]
        public Input<int>? DiskSize { get; set; }

        [Input("elasticIpIds")]
        private InputList<string>? _elasticIpIds;

        /// <summary>
        /// A list of [Elastic IP][eip-doc] IDs.
        /// </summary>
        public InputList<string> ElasticIpIds
        {
            get => _elasticIpIds ?? (_elasticIpIds = new InputList<string>());
            set => _elasticIpIds = value;
        }

        /// <summary>
        /// The string to add as prefix to managed Compute instances name (default: `pool`).
        /// </summary>
        [Input("instancePrefix")]
        public Input<string>? InstancePrefix { get; set; }

        /// <summary>
        /// The managed Compute instances [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Enable IPv6 on managed Compute instances (default: `false`).
        /// </summary>
        [Input("ipv6")]
        public Input<bool>? Ipv6 { get; set; }

        /// <summary>
        /// The name of the [SSH key pair][sshkeypair] to install when creating Compute instances.
        /// </summary>
        [Input("keyPair")]
        public Input<string>? KeyPair { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The name of the Instance Pool.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkIds")]
        private InputList<string>? _networkIds;

        /// <summary>
        /// A list of [Private Network][privnet-doc] IDs.
        /// </summary>
        public InputList<string> NetworkIds
        {
            get => _networkIds ?? (_networkIds = new InputList<string>());
            set => _networkIds = value;
        }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// A list of [Security Group][r-security_group] IDs (at creation time only).
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// **Deprecated** The managed Compute instances size. Replaced by `instance_type`.
        /// </summary>
        [Input("serviceOffering")]
        public Input<string>? ServiceOffering { get; set; }

        /// <summary>
        /// The number of Compute instance members the Instance Pool manages.
        /// </summary>
        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The ID of the instance [template][template] to use when creating Compute instances. Usage of the [`compute_template`][d-compute_template] data source is recommended.
        /// </summary>
        [Input("templateId", required: true)]
        public Input<string> TemplateId { get; set; } = null!;

        /// <summary>
        /// A [cloud-init][cloudinit] configuration to apply when creating Compute instances. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        [Input("virtualMachines")]
        private InputList<string>? _virtualMachines;

        /// <summary>
        /// The list of Instance Pool members (Compute instance IDs).
        /// </summary>
        public InputList<string> VirtualMachines
        {
            get => _virtualMachines ?? (_virtualMachines = new InputList<string>());
            set => _virtualMachines = value;
        }

        /// <summary>
        /// The name of the [zone][zone] to deploy the Instance Pool into.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public InstancePoolArgs()
        {
        }
    }

    public sealed class InstancePoolState : Pulumi.ResourceArgs
    {
        [Input("affinityGroupIds")]
        private InputList<string>? _affinityGroupIds;

        /// <summary>
        /// A list of [Anti-Affinity Group][r-affinity] IDs (at creation time only).
        /// </summary>
        public InputList<string> AffinityGroupIds
        {
            get => _affinityGroupIds ?? (_affinityGroupIds = new InputList<string>());
            set => _affinityGroupIds = value;
        }

        /// <summary>
        /// A Deploy Target ID.
        /// </summary>
        [Input("deployTargetId")]
        public Input<string>? DeployTargetId { get; set; }

        /// <summary>
        /// The description of the Instance Pool.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The managed Compute instances disk size.
        /// </summary>
        [Input("diskSize")]
        public Input<int>? DiskSize { get; set; }

        [Input("elasticIpIds")]
        private InputList<string>? _elasticIpIds;

        /// <summary>
        /// A list of [Elastic IP][eip-doc] IDs.
        /// </summary>
        public InputList<string> ElasticIpIds
        {
            get => _elasticIpIds ?? (_elasticIpIds = new InputList<string>());
            set => _elasticIpIds = value;
        }

        /// <summary>
        /// The string to add as prefix to managed Compute instances name (default: `pool`).
        /// </summary>
        [Input("instancePrefix")]
        public Input<string>? InstancePrefix { get; set; }

        /// <summary>
        /// The managed Compute instances [type][type] (format: `FAMILY.SIZE`, e.g. `standard.medium`, `memory.huge`).
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Enable IPv6 on managed Compute instances (default: `false`).
        /// </summary>
        [Input("ipv6")]
        public Input<bool>? Ipv6 { get; set; }

        /// <summary>
        /// The name of the [SSH key pair][sshkeypair] to install when creating Compute instances.
        /// </summary>
        [Input("keyPair")]
        public Input<string>? KeyPair { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The name of the Instance Pool.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkIds")]
        private InputList<string>? _networkIds;

        /// <summary>
        /// A list of [Private Network][privnet-doc] IDs.
        /// </summary>
        public InputList<string> NetworkIds
        {
            get => _networkIds ?? (_networkIds = new InputList<string>());
            set => _networkIds = value;
        }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// A list of [Security Group][r-security_group] IDs (at creation time only).
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// **Deprecated** The managed Compute instances size. Replaced by `instance_type`.
        /// </summary>
        [Input("serviceOffering")]
        public Input<string>? ServiceOffering { get; set; }

        /// <summary>
        /// The number of Compute instance members the Instance Pool manages.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The ID of the instance [template][template] to use when creating Compute instances. Usage of the [`compute_template`][d-compute_template] data source is recommended.
        /// </summary>
        [Input("templateId")]
        public Input<string>? TemplateId { get; set; }

        /// <summary>
        /// A [cloud-init][cloudinit] configuration to apply when creating Compute instances. Whenever possible don't base64-encode neither gzip it yourself, as this will be automatically taken care of on your behalf by the provider.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        [Input("virtualMachines")]
        private InputList<string>? _virtualMachines;

        /// <summary>
        /// The list of Instance Pool members (Compute instance IDs).
        /// </summary>
        public InputList<string> VirtualMachines
        {
            get => _virtualMachines ?? (_virtualMachines = new InputList<string>());
            set => _virtualMachines = value;
        }

        /// <summary>
        /// The name of the [zone][zone] to deploy the Instance Pool into.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public InstancePoolState()
        {
        }
    }
}
