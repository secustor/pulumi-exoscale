// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Exoscale
{
    /// <summary>
    /// Provides an Exoscale [Elastic IP address][eip-doc] resource. This can be used to create, update and delete Elastic IPs.
    /// 
    /// ## Import
    /// 
    /// An existing Elastic IP can be imported as a resource by specifying `ID@ZONE`console
    /// 
    /// ```sh
    ///  $ pulumi import exoscale:index/elasticIP:ElasticIP web eb556678-ec59-4be6-8c54-0406ae0f6da6@ch-dk-2
    /// ```
    /// 
    ///  [eip-doc]https://community.exoscale.com/documentation/compute/eip/ [zone]https://www.exoscale.com/datacenters/
    /// </summary>
    [ExoscaleResourceType("exoscale:index/elasticIP:ElasticIP")]
    public partial class ElasticIP : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the Elastic IP.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A health checking configuration for managed Elastic IPs. Structure is documented below.
        /// </summary>
        [Output("healthcheck")]
        public Output<Outputs.ElasticIPHealthcheck> Healthcheck { get; private set; } = null!;

        /// <summary>
        /// The Elastic IP address.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The name of the [zone][zone] to create the Elastic IP into.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a ElasticIP resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ElasticIP(string name, ElasticIPArgs args, CustomResourceOptions? options = null)
            : base("exoscale:index/elasticIP:ElasticIP", name, args ?? new ElasticIPArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ElasticIP(string name, Input<string> id, ElasticIPState? state = null, CustomResourceOptions? options = null)
            : base("exoscale:index/elasticIP:ElasticIP", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ElasticIP resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ElasticIP Get(string name, Input<string> id, ElasticIPState? state = null, CustomResourceOptions? options = null)
        {
            return new ElasticIP(name, id, state, options);
        }
    }

    public sealed class ElasticIPArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Elastic IP.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A health checking configuration for managed Elastic IPs. Structure is documented below.
        /// </summary>
        [Input("healthcheck")]
        public Input<Inputs.ElasticIPHealthcheckArgs>? Healthcheck { get; set; }

        /// <summary>
        /// The name of the [zone][zone] to create the Elastic IP into.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public ElasticIPArgs()
        {
        }
    }

    public sealed class ElasticIPState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Elastic IP.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A health checking configuration for managed Elastic IPs. Structure is documented below.
        /// </summary>
        [Input("healthcheck")]
        public Input<Inputs.ElasticIPHealthcheckGetArgs>? Healthcheck { get; set; }

        /// <summary>
        /// The Elastic IP address.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The name of the [zone][zone] to create the Elastic IP into.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ElasticIPState()
        {
        }
    }
}
